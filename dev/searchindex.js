Search.setIndex({"docnames": ["about", "dev_guide/api", "dev_guide/contributing", "dev_guide/index", "index", "install", "modules/api", "modules/generated/tltorch.BlockTT", "modules/generated/tltorch.CPTensor", "modules/generated/tltorch.CPTensorized", "modules/generated/tltorch.DenseTensor", "modules/generated/tltorch.DenseTensorized", "modules/generated/tltorch.FactorizedTensor", "modules/generated/tltorch.TTTensor", "modules/generated/tltorch.TensorizedTensor", "modules/generated/tltorch.TuckerTensor", "modules/generated/tltorch.factorized_layers.FactorizedConv", "modules/generated/tltorch.factorized_layers.FactorizedEmbedding", "modules/generated/tltorch.factorized_layers.FactorizedLinear", "modules/generated/tltorch.factorized_layers.TCL", "modules/generated/tltorch.factorized_layers.TRL", "modules/generated/tltorch.factorized_tensors.init.block_tt_init", "modules/generated/tltorch.factorized_tensors.init.cp_init", "modules/generated/tltorch.factorized_tensors.init.tensor_init", "modules/generated/tltorch.factorized_tensors.init.tt_init", "modules/generated/tltorch.factorized_tensors.init.tucker_init", "modules/generated/tltorch.tensor_hooks.TensorDropout", "modules/generated/tltorch.tensor_hooks.remove_tensor_dropout", "modules/generated/tltorch.tensor_hooks.remove_tensor_lasso", "modules/generated/tltorch.tensor_hooks.tensor_dropout", "modules/generated/tltorch.tensor_hooks.tensor_lasso", "user_guide/factorized_conv", "user_guide/index", "user_guide/tensor_hooks", "user_guide/tensorized_linear", "user_guide/trl"], "filenames": ["about.rst", "dev_guide/api.rst", "dev_guide/contributing.rst", "dev_guide/index.rst", "index.rst", "install.rst", "modules/api.rst", "modules/generated/tltorch.BlockTT.rst", "modules/generated/tltorch.CPTensor.rst", "modules/generated/tltorch.CPTensorized.rst", "modules/generated/tltorch.DenseTensor.rst", "modules/generated/tltorch.DenseTensorized.rst", "modules/generated/tltorch.FactorizedTensor.rst", "modules/generated/tltorch.TTTensor.rst", "modules/generated/tltorch.TensorizedTensor.rst", "modules/generated/tltorch.TuckerTensor.rst", "modules/generated/tltorch.factorized_layers.FactorizedConv.rst", "modules/generated/tltorch.factorized_layers.FactorizedEmbedding.rst", "modules/generated/tltorch.factorized_layers.FactorizedLinear.rst", "modules/generated/tltorch.factorized_layers.TCL.rst", "modules/generated/tltorch.factorized_layers.TRL.rst", "modules/generated/tltorch.factorized_tensors.init.block_tt_init.rst", "modules/generated/tltorch.factorized_tensors.init.cp_init.rst", "modules/generated/tltorch.factorized_tensors.init.tensor_init.rst", "modules/generated/tltorch.factorized_tensors.init.tt_init.rst", "modules/generated/tltorch.factorized_tensors.init.tucker_init.rst", "modules/generated/tltorch.tensor_hooks.TensorDropout.rst", "modules/generated/tltorch.tensor_hooks.remove_tensor_dropout.rst", "modules/generated/tltorch.tensor_hooks.remove_tensor_lasso.rst", "modules/generated/tltorch.tensor_hooks.tensor_dropout.rst", "modules/generated/tltorch.tensor_hooks.tensor_lasso.rst", "user_guide/factorized_conv.rst", "user_guide/index.rst", "user_guide/tensor_hooks.rst", "user_guide/tensorized_linear.rst", "user_guide/trl.rst"], "titles": ["About Us", "Style and API", "Contributing", "Development guide", "Deep Tensorized Learning", "Installing tensorly-Torch", "API reference", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tltorch</span></code>.BlockTT", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tltorch</span></code>.CPTensor", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tltorch</span></code>.CPTensorized", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tltorch</span></code>.DenseTensor", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tltorch</span></code>.DenseTensorized", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tltorch</span></code>.FactorizedTensor", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tltorch</span></code>.TTTensor", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tltorch</span></code>.TensorizedTensor", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tltorch</span></code>.TuckerTensor", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tltorch.factorized_layers</span></code>.FactorizedConv", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tltorch.factorized_layers</span></code>.FactorizedEmbedding", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tltorch.factorized_layers</span></code>.FactorizedLinear", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tltorch.factorized_layers</span></code>.TCL", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tltorch.factorized_layers</span></code>.TRL", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tltorch.factorized_tensors.init</span></code>.block_tt_init", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tltorch.factorized_tensors.init</span></code>.cp_init", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tltorch.factorized_tensors.init</span></code>.tensor_init", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tltorch.factorized_tensors.init</span></code>.tt_init", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tltorch.factorized_tensors.init</span></code>.tucker_init", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tltorch.tensor_hooks</span></code>.TensorDropout", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tltorch.tensor_hooks</span></code>.remove_tensor_dropout", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tltorch.tensor_hooks</span></code>.remove_tensor_lasso", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tltorch.tensor_hooks</span></code>.tensor_dropout", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tltorch.tensor_hooks</span></code>.tensor_lasso", "Factorized Convolutional Layers", "User guide", "Tensor Hooks", "Tensorized Linear Layers", "Tensor Regression Layers"], "terms": {"tensorli": [0, 1, 2, 4, 6, 31, 32, 33, 34], "torch": [0, 1, 2, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 23, 30, 31, 32, 33, 34], "i": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31, 33, 34, 35], "an": [0, 2, 5, 6, 12, 14, 18, 30, 32, 33, 35], "open": [0, 2], "sourc": [0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "effort": 0, "led": 0, "primarili": 0, "nvidia": 0, "research": 0, "jean": [0, 20], "kossaifi": [0, 19, 20], "It": [0, 4, 5, 31, 32, 35], "part": [0, 5], "project": [0, 1, 2], "build": [0, 4, 6, 32], "top": [0, 4, 6, 32], "order": [0, 4, 12, 14, 16, 31, 34, 35], "provid": [0, 4, 6, 32, 33], "out": [0, 4, 6, 32], "box": [0, 4, 6, 32], "pytorch": [0, 4, 6, 18, 31, 32], "tensor": [0, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32], "layer": [0, 4, 16, 17, 18, 19, 20, 30, 32, 33], "deep": [0, 6, 19, 32, 35], "learn": [0, 20], "anima": [0, 20], "anandkumar": [0, 19, 20], "wonmin": 0, "byeon": 0, "saurav": 0, "muralidharan": 0, "The": [0, 5, 6, 14, 15, 16, 18, 30, 35], "In": [1, 4, 6, 31, 33, 35], "more": [1, 4], "gener": [1, 4, 5, 6, 30, 35], "we": [1, 2, 4, 15, 21, 22, 24, 25, 31, 33], "try": [1, 31], "maintain": 1, "simpl": [1, 4, 6, 33], "consist": 1, "here": [1, 5, 21, 22, 24, 25, 30], "ar": [1, 2, 4, 5, 6, 14, 15, 16, 20, 21, 22, 24, 25, 29, 30, 31, 34], "some": [1, 31], "element": 1, "consid": 1, "come": [1, 4, 5], "soon": 1, "activ": [2, 35], "welcom": 2, "new": [2, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 27, 28, 29, 30, 33], "If": [2, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 30, 31], "you": [2, 4, 5, 6, 16, 30, 31, 33, 34], "know": 2, "method": [2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 26, 32], "should": [2, 6, 16, 17, 18], "spot": 2, "ani": [2, 4, 6, 31, 32, 33], "mistak": 2, "typo": 2, "miss": 2, "document": [2, 4], "etc": 2, "pleas": 2, "report": 2, "even": [2, 32], "better": [2, 35], "pull": 2, "request": 2, "To": [2, 12, 16, 33], "make": [2, 4, 5, 33], "sure": 2, "relev": 2, "alreadi": [2, 34], "work": 2, "can": [2, 4, 5, 6, 30, 31, 32, 33, 34], "issu": [2, 33, 35], "add": [2, 6, 8, 13, 16, 33], "code": [2, 32, 35], "fix": 2, "want": [2, 4, 5, 6], "github": 2, "repositori": 2, "For": [2, 4, 17, 20, 26, 31, 33], "each": [2, 33, 34], "function": [2, 6, 16, 17, 18, 33], "class": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 26, 31], "expect": 2, "help": 2, "docstr": 2, "numpi": [2, 4, 5, 35], "format": [2, 14, 21], "well": [2, 4, 5], "unit": 2, "test": [2, 4], "especi": 2, "futur": 2, "refactor": 2, "exis": 2, "broken": 2, "check": [2, 21, 22, 24, 25], "exist": [2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 32], "exampl": [2, 8, 10, 12, 13, 15, 27, 28, 29, 30], "don": [2, 15, 30, 33], "t": [2, 15, 19, 30, 33], "hesit": 2, "contact": 2, "u": [2, 5], "unsur": 2, "have": [2, 4, 5, 6, 7, 9, 11, 12, 14, 15, 30, 31, 33, 34], "question": 2, "contribut": 3, "how": [3, 7, 9, 11, 14, 15, 35], "guidelin": 3, "style": 3, "api": [3, 4], "batteri": 4, "includ": 4, "onli": [4, 7, 8, 10, 12, 13, 15, 20, 29], "librari": [4, 31], "all": [4, 5, 12, 16, 17, 18, 19, 29], "tri": 4, "easi": [4, 33], "possibl": [4, 31, 34], "us": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 31, 32, 33], "within": [4, 12, 16, 17, 18, 32], "leverag": [4, 35], "structur": [4, 35], "data": [4, 31, 34], "easili": [4, 6, 31, 33, 34], "through": [4, 6, 15, 30, 31, 35], "trl": [4, 32, 33], "tcl": 4, "factor": [4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 32, 33, 34], "convolut": [4, 16, 32, 35], "built": 4, "do": [4, 34, 35], "import": [4, 31, 33, 34, 35], "directli": [4, 6, 16, 18, 20, 21, 22, 23, 24, 25, 31], "model": [4, 17, 35], "initi": [4, 15, 16, 17, 20, 21, 22, 23, 24, 25, 32], "decomposit": [4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 24, 25, 26, 27, 28, 29, 31, 32], "tricki": 4, "take": [4, 16, 17, 18, 33], "care": [4, 16, 17, 18, 33], "whether": [4, 17, 18], "randomli": [4, 16, 19, 20, 33], "our": [4, 6, 31, 33], "modul": [4, 6, 16, 17, 18, 20, 27, 28, 29, 31, 33], "from": [4, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 20, 27, 28, 30, 32, 34, 35], "pretrain": 4, "hook": [4, 16, 17, 18, 26, 32], "augment": 4, "architectur": 4, "robustifi": 4, "dropout": [4, 26, 27, 28, 29, 32], "automat": [4, 17, 30], "select": [4, 29, 33], "rank": [4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 27, 28, 29, 30, 31, 32, 34, 35], "end": 4, "l1": [4, 30, 33], "regular": [4, 16, 17, 18, 30, 32], "avail": 4, "alwai": 4, "ad": [4, 15], "compar": 4, "between": [4, 30, 35], "perform": [4, 16, 17, 18, 19, 20], "variou": 4, "base": [4, 6], "matrix": [4, 6, 7, 9, 11, 13, 14, 18, 21], "algebra": [4, 32], "oper": [4, 6], "higher": [4, 34, 35], "typic": [4, 35], "map": [4, 35], "fact": 4, "abil": 4, "preserv": [4, 35], "local": 4, "along": 4, "larg": [4, 33, 35], "dataset": 4, "effici": [4, 6, 17, 32, 35], "hardwar": 4, "made": 4, "current": [4, 7, 8, 10, 12, 13, 15], "level": [4, 19, 20], "allow": [4, 6, 20, 35], "further": 4, "individu": 4, "whole": 4, "python": [4, 5], "aim": 4, "access": [4, 30], "high": [4, 35], "core": [4, 6, 15, 25], "regress": [4, 20, 32], "ha": [4, 15, 21, 22, 23, 24, 25, 29, 33, 35], "flexibl": 4, "backend": 4, "run": [4, 16, 17, 18], "seamlessli": 4, "tensorflow": 4, "jax": 4, "mxnet": 4, "cupi": 4, "conveni": [4, 6], "heavi": 4, "lift": 4, "benefit": 4, "wrap": 4, "nice": 4, "instanc": [4, 16, 17, 18, 26, 30, 31, 33], "2d": 4, "3d": 4, "parametr": [4, 6, 14, 16, 18, 27, 28, 29, 33, 34], "cp": [4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20, 22, 27, 28, 29, 30, 31, 33], "result": [4, 5, 35], "separ": 4, "replac": [4, 6, 17, 20], "origin": [4, 18], "seri": 4, "small": [4, 33], "ones": [4, 8, 13, 16], "These": [4, 6], "also": [4, 6, 19, 30, 33, 34, 35], "tucker": [4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 20, 25, 31, 33, 34], "train": [4, 13, 18, 21, 33, 35], "implement": [4, 16, 18, 31], "other": [4, 15], "contract": [4, 18, 19], "linear": [4, 18, 20, 32, 35], "start": [4, 5], "need": [5, 16, 17, 18, 30], "3": [5, 8, 10, 12, 13, 15, 17, 26, 27, 28, 29, 30, 31], "scipi": 5, "pain": 5, "free": 5, "experi": 5, "anaconda": 5, "distribiut": 5, "ship": 5, "readi": 5, "simpli": [5, 33], "your": [5, 16, 30, 31], "termin": 5, "option": [5, 7, 8, 9, 10, 11, 12, 13, 14, 15], "updat": [5, 30], "packag": 5, "cd": 5, "git": 5, "http": 5, "com": 5, "Then": 5, "edit": 5, "mode": [5, 8, 13, 15, 16, 18, 20, 26, 29], "e": [5, 8, 13, 15, 16, 18, 31, 34, 35], "equival": [5, 12, 16], "uni": 5, "vital": 5, "thi": [5, 6, 15, 16, 17, 18, 20, 33, 34, 35], "pytest": 5, "tltorch": [5, 6, 31, 33, 34, 35], "slimit": 5, "minifi": 5, "rcssmin": 5, "now": [5, 31, 34, 35], "doc": 5, "html": 5, "_build": 5, "neural": [6, 35], "network": [6, 12, 20, 31, 32, 35], "concept": [6, 35], "which": [6, 15, 18, 26, 27, 28, 29, 31], "instead": [6, 15, 16, 17, 18, 20], "dens": [6, 8, 10, 12, 13, 15], "creat": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 30, 32, 33, 34, 35], "main": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "form": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 21, 22, 24, 25], "factorizedtensor": [6, 8, 10, 13, 15, 23, 26, 27, 28, 29, 30], "shape": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 26], "where": [6, 8, 13, 16], "tt": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 21, 24], "note": [6, 12, 21, 22, 24, 25], "just": 6, "unfactor": 6, "manipul": [6, 33], "unifi": 6, "interfac": 6, "altern": 6, "specif": 6, "subclass": [6, 16, 17, 18], "repres": 6, "low": [6, 18, 31, 35], "tensorizedtensor": [6, 7, 9, 11, 17], "tensorized_shap": [6, 7, 9, 11, 14, 18], "blocktt": [6, 17, 21], "explicitli": 6, "type": [6, 17], "follow": [6, 7, 8, 10, 12, 13, 15, 31], "n": 6, "dimension": 6, "A": [6, 19, 35], "drop": [6, 17, 29], "": [6, 16, 30, 31, 33, 34, 35], "never": 6, "reconstruct": [6, 7, 8, 10, 12, 13, 14, 15, 16, 18, 21, 22, 23, 24, 25, 33], "full": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 22, 23, 24, 25, 33], "tabl": [6, 17], "remov": [6, 27, 28, 30, 33], "below": 6, "unless": 6, "particular": 6, "arg": [7, 8, 9, 10, 11, 12, 13, 14, 15], "kwarg": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20], "attribut": [7, 8, 10, 12, 13, 14, 15, 19], "return": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 29, 30], "paramet": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 35], "compos": [7, 8, 10, 12, 13, 15], "init_from_tensor": [7, 8, 10, 13, 15], "classmethod": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "devic": [7, 8, 9, 10, 11, 13, 15, 16, 17, 18, 19, 20, 31, 35], "none": [7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20], "dtype": [7, 8, 9, 10, 11, 13, 15, 16, 17, 18, 19, 20, 31, 34, 35], "wai": [7, 8, 9, 10, 11, 12, 13, 14, 15, 33], "tupl": [7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 31], "int": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 26, 29], "same": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 30, 31, 33, 35], "float": [7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 21, 22, 23, 24, 25, 26, 29, 30], "n_matric": [7, 9, 11, 14], "default": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31], "indic": [7, 9, 11, 12, 14, 16, 17, 18], "mani": [7, 9, 11, 14], "matric": [7, 9, 11, 14, 18, 34], "jointli": [7, 9, 11, 14], "decompos": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20], "rais": [7, 8, 9, 10, 11, 12, 13, 14, 15], "valueerror": [7, 8, 9, 10, 11, 12, 13, 14, 15], "given": [7, 8, 9, 10, 11, 12, 13, 14, 15, 21, 22, 24, 25], "doe": [7, 8, 9, 10, 11, 12, 13, 14, 15], "properti": [7, 8, 10, 12, 13, 15], "to_tensor": [7, 8, 10, 12, 13, 15], "its": [7, 8, 10, 12, 13, 15], "normal_": [7, 8, 10, 12, 13, 15, 27, 28, 29, 30, 33], "mean": [7, 8, 10, 12, 13, 15, 21, 22, 23, 24, 25, 33], "0": [7, 8, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34], "std": [7, 8, 10, 12, 13, 15, 21, 22, 23, 24, 25], "1": [7, 8, 10, 12, 13, 15, 16, 17, 18, 19, 20, 26, 29, 30], "inial": [7, 8, 10, 12, 13, 15], "gaussian": [7, 8, 10, 12, 13, 15], "distribut": [7, 8, 10, 12, 13, 15], "support": [7, 8, 10, 12, 13, 15, 18], "standard": [7, 8, 10, 12, 13, 15, 21, 22, 23, 24, 25, 33], "deviat": [7, 8, 10, 12, 13, 15, 21, 22, 23, 24, 25, 33], "self": [7, 8, 10, 12, 13, 15, 16], "from_tensor": [7, 8, 9, 10, 11, 12, 13, 14, 15], "tensorfactor": [7, 8, 9, 10, 11, 12, 13, 14, 15], "weight": [8, 17, 18, 20, 21, 22, 24, 25, 30, 33], "4": [8, 10, 12, 13, 15, 26, 27, 28, 29, 30, 34, 35], "2": [8, 10, 12, 13, 14, 15, 18, 27, 28, 29, 30, 31, 34, 35], "half": [8, 10, 12, 13, 15], "would": [8, 10, 12, 13, 15, 31], "tucker_tensor": [8, 10, 12, 13, 15, 25], "5": [8, 10, 12, 13, 15, 27, 28, 29, 30, 31, 33, 34, 35], "transduct": [8, 13, 16], "new_dim": [8, 13], "new_factor": [8, 13], "dimens": [8, 13, 14, 15, 16, 17, 18, 19, 26, 29, 35], "insert": [8, 13, 16], "after": [8, 13, 16, 30, 33], "channel": [8, 13, 16], "befor": [8, 13, 16, 35], "g": [8, 13, 15, 16, 18, 31, 35], "time": [8, 13, 16, 35], "height": [8, 13, 16], "width": [8, 13, 16], "must": [12, 18], "name": [12, 26, 31], "ndim": [12, 14], "tensor_shap": [12, 14], "numel": 12, "forward": [12, 16, 17, 18, 19, 20], "index": 12, "dure": [12, 18, 33], "pass": [12, 16, 17, 18, 19, 20, 31, 35], "dim": [12, 14, 15], "fact_tensor": [12, 33], "size": [12, 16, 18, 19, 20, 26, 31, 34, 35], "product": [13, 35], "state": 13, "correspond": [14, 15], "underli": 14, "init_from_matrix": 14, "from_matrix": 14, "tensorized_row_shap": 14, "tensorized_column_shap": 14, "first": [14, 15, 17, 30, 31, 33, 35], "row": 14, "second": [14, 17], "column": 14, "tensorizedmatrix": 14, "to_matrix": 14, "sever": [14, 30, 35], "batch": [14, 19, 20, 34], "fixed_rank_mod": [15, 16], "unsqueezed_mod": [15, 20], "unsqueezed_init": 15, "averag": [15, 20], "list": [15, 19, 20], "essenti": 15, "unsqueez": 15, "unsqueezed_factor": 15, "valu": [15, 19, 30, 33], "in_channel": 16, "out_channel": 16, "kernel_s": [16, 31], "stride": 16, "pad": 16, "dilat": 16, "bia": [16, 18, 19, 20], "fals": [16, 18, 19, 20, 26, 29], "has_bia": 16, "n_layer": [16, 17, 18, 20], "arbitrari": 16, "from_conv_list": 16, "from_factor": 16, "reset_paramet": [16, 17, 18, 19], "x": [16, 18, 19, 20, 33, 35], "defin": [16, 17, 18, 33], "comput": [16, 17, 18, 19], "everi": [16, 17, 18], "call": [16, 17, 18], "overridden": [16, 17, 18], "although": [16, 17, 18], "recip": [16, 17, 18], "one": [16, 17, 18, 30], "afterward": [16, 17, 18], "sinc": [16, 17, 18], "former": [16, 17, 18], "regist": [16, 17, 18], "while": [16, 17, 18, 33, 35], "latter": [16, 17, 18], "silent": [16, 17, 18], "ignor": [16, 17, 18], "them": [16, 17, 18, 34], "set": [16, 19, 30], "conv": [16, 31], "get_conv": 16, "sub": 16, "joint": 16, "share": 16, "from_conv": [16, 31], "conv_lay": 16, "decompose_weight": [16, 17, 31], "true": [16, 17, 18, 20, 30, 31], "decomposition_kwarg": [16, 17, 18], "nn": [16, 17, 18, 20, 31, 34, 35], "convnd": 16, "str": [16, 17, 18, 30], "decomposed_weight": 16, "bool": [16, 17, 18, 20, 30], "kernel": [16, 31], "otherwis": [16, 20, 30], "dict": [16, 17], "decompoosit": 16, "weightss": 16, "fine_tune_transduction_onli": 16, "addit": 16, "extra_repr": 16, "extra": 16, "represent": 16, "print": 16, "custom": 16, "inform": [16, 35], "re": [16, 33], "own": 16, "both": [16, 17], "singl": [16, 18], "line": 16, "multi": [16, 35], "string": 16, "accept": 16, "num_embed": 17, "embedding_dim": 17, "auto_reshap": 17, "d": 17, "tensorized_num_embed": 17, "tensorized_embedding_dim": 17, "8": [17, 18], "embed": 17, "compress": [17, 31, 34], "number": [17, 18, 29, 31, 35], "entri": 17, "lookup": 17, "per": 17, "reshap": [17, 34], "get_embed": 17, "input": [17, 18, 19, 20, 31, 35], "from_embed": 17, "embedding_lay": 17, "specifi": [17, 20, 21, 22, 23, 24, 25, 31, 33], "from_embedding_list": 17, "embedding_layer_list": 17, "in_tensorized_featur": [18, 34], "out_tensorized_featur": [18, 34], "checkpoint": 18, "fulli": [18, 20], "connect": [18, 20], "That": 18, "express": 18, "infer": 18, "unfold": 18, "back": 18, "input_featur": 18, "in_featur": [18, 34], "could": 18, "verifi": 18, "prod": 18, "version": 18, "enabl": [18, 32], "gradient": [18, 33], "save": 18, "memori": 18, "get_linear": 18, "from_linear": [18, 34], "factorized_weight": 18, "np": [18, 35], "percentag": 18, "from_linear_list": 18, "linear_list": 18, "init": 18, "random": [18, 32], "input_shap": [19, 20, 31, 35], "verbos": [19, 20], "input_s": 19, "iter": [19, 20, 33], "exclud": [19, 20], "output": [19, 20, 35], "refer": [19, 20], "j": 19, "khanna": [19, 20], "z": 19, "lipton": [19, 20], "furlanello": [19, 20], "parsimoni": [19, 35], "net": 19, "2017": 19, "ieee": 19, "confer": 19, "vision": 19, "pattern": 19, "recognit": 19, "workshop": 19, "cvprw": 19, "honolulu": 19, "hi": 19, "pp": 19, "1940": 19, "1946": 19, "doi": 19, "10": [19, 33, 34], "1109": 19, "243": 19, "output_shap": [20, 35], "zachari": 20, "c": 20, "arinbjorn": 20, "kolbeinsson": 20, "aran": 20, "tommaso": 20, "jmlr": 20, "2020": 20, "init_from_random": 20, "decompose_full_weight": 20, "construct": 20, "init_from_linear": 20, "initialis": 20, "pool": 20, "block_tt": 21, "02": [21, 22, 23, 24, 25, 33], "so": [21, 22, 23, 24, 25, 31, 33], "desir": [21, 22, 23, 24, 25], "assum": [21, 22, 24, 25], "correct": [21, 22, 24, 25], "block": [21, 32], "done": [21, 22, 24, 25], "cp_tensor": 22, "cptensor": 22, "tt_tensor": 24, "tttensor": 24, "tuckertensor": 25, "proba": 26, "min_dim": [26, 29], "min_valu": [26, 29], "drop_test": [26, 29], "appli": [26, 27, 28, 29, 30, 31, 33], "probabl": [26, 29], "minimum": [26, 29], "32": [26, 31], "last": 26, "two": 26, "factorized_tensor": [27, 28, 29], "tensormodul": [27, 28], "tensor_dropout": 27, "p": [27, 28, 29, 33], "lasso": [28, 30, 32], "tensor_lasso": 28, "compon": [29, 33], "latent": 29, "space": 29, "larger": 29, "than": [29, 30], "been": 29, "attach": 29, "remove_tensor_dropout": 29, "penalti": [30, 33], "01": [30, 33], "clamp_weight": 30, "threshold": 30, "1e": 30, "06": 30, "normalize_loss": 30, "scale": 30, "loss": [30, 33], "clamp": 30, "6": [30, 35], "lower": 30, "raw": 30, "sum": 30, "absolut": 30, "let": [30, 31, 33, 34, 35], "sai": 30, "tensor2": 30, "7": 30, "tensorlasso": 30, "l1_loss": 30, "optim": 30, "backpropag": 30, "usual": 30, "finish": 30, "forget": [30, 33], "reset": [30, 33], "keep": [30, 33], "accumul": [30, 33], "remove_tensor_lasso": 30, "reduc": 31, "choos": [31, 33], "cpu": [31, 35], "input_channel": 31, "16": [31, 34], "output_channel": 31, "batch_siz": [31, 35], "24": 31, "kernel_shap": 31, "randn": [31, 34, 35], "float32": [31, 34, 35], "conv2d": 31, "exactli": 31, "except": 31, "either": 31, "factorizedconv": 31, "creation": 31, "conv3d": 31, "fact_conv": 31, "Or": 31, "case": 31, "len": 31, "get": 31, "mobilenet": 31, "v2": 31, "similarli": [31, 33], "resnet": 31, "bottleneck": 31, "wa": [32, 33], "written": 32, "readili": 32, "anyon": 32, "without": [32, 33], "knowledg": 32, "veri": [33, 35], "helper": 33, "tucker_dropout": 33, "remove_tucker_dropout": 33, "hard": 33, "problem": 33, "One": 33, "previous": 33, "extend": 33, "introduc": 33, "object": 33, "everyth": 33, "l1_reg": 33, "tuckerl1regular": 33, "my_loss": 33, "anoth": 33, "arbitrarili": 33, "potenti": 33, "lead": [33, 35], "vanish": 33, "explod": 33, "properli": 33, "zero": 33, "howev": 34, "point": 34, "imagin": 34, "fact_linear": 34, "factorizedlinear": 34, "scratch": [34, 35], "still": 35, "obtain": 35, "flatten": 35, "being": 35, "approach": 35, "drawback": 35, "discard": 35, "topolog": 35, "spatial": 35, "lack": 35, "robust": 35, "allevi": 35, "abov": 35, "term": 35, "constraint": 35, "act": 35, "implicit": 35, "regur": 35, "sampl": 35, "see": 35}, "objects": {"": [[6, 0, 0, "-", "tltorch"]], "tltorch": [[7, 1, 1, "", "BlockTT"], [8, 1, 1, "", "CPTensor"], [9, 1, 1, "", "CPTensorized"], [10, 1, 1, "", "DenseTensor"], [11, 1, 1, "", "DenseTensorized"], [12, 1, 1, "", "FactorizedTensor"], [13, 1, 1, "", "TTTensor"], [14, 1, 1, "", "TensorizedTensor"], [15, 1, 1, "", "TuckerTensor"], [6, 0, 0, "-", "factorized_layers"], [6, 0, 0, "-", "factorized_tensors"], [6, 0, 0, "-", "tensor_hooks"]], "tltorch.BlockTT": [[7, 2, 1, "", "decomposition"], [7, 3, 1, "", "from_tensor"], [7, 3, 1, "", "new"], [7, 3, 1, "", "normal_"], [7, 3, 1, "", "to_tensor"]], "tltorch.CPTensor": [[8, 2, 1, "", "decomposition"], [8, 3, 1, "", "from_tensor"], [8, 3, 1, "", "new"], [8, 3, 1, "", "normal_"], [8, 3, 1, "", "to_tensor"], [8, 3, 1, "", "transduct"]], "tltorch.CPTensorized": [[9, 3, 1, "", "from_tensor"], [9, 3, 1, "", "new"]], "tltorch.DenseTensor": [[10, 2, 1, "", "decomposition"], [10, 3, 1, "", "from_tensor"], [10, 3, 1, "", "new"], [10, 3, 1, "", "normal_"], [10, 3, 1, "", "to_tensor"]], "tltorch.DenseTensorized": [[11, 3, 1, "", "from_tensor"], [11, 3, 1, "", "new"]], "tltorch.FactorizedTensor": [[12, 2, 1, "", "decomposition"], [12, 3, 1, "", "dim"], [12, 3, 1, "", "forward"], [12, 3, 1, "", "from_tensor"], [12, 2, 1, "", "name"], [12, 2, 1, "", "ndim"], [12, 3, 1, "", "new"], [12, 3, 1, "", "normal_"], [12, 3, 1, "", "size"], [12, 3, 1, "", "to_tensor"]], "tltorch.TTTensor": [[13, 2, 1, "", "decomposition"], [13, 3, 1, "", "from_tensor"], [13, 3, 1, "", "new"], [13, 3, 1, "", "normal_"], [13, 3, 1, "", "to_tensor"], [13, 3, 1, "", "transduct"]], "tltorch.TensorizedTensor": [[14, 3, 1, "", "from_matrix"], [14, 3, 1, "", "from_tensor"], [14, 3, 1, "", "new"], [14, 3, 1, "", "to_matrix"]], "tltorch.TuckerTensor": [[15, 2, 1, "", "decomposition"], [15, 3, 1, "", "from_tensor"], [15, 3, 1, "", "init_from_tensor"], [15, 3, 1, "", "new"], [15, 3, 1, "", "normal_"], [15, 3, 1, "", "to_tensor"]], "tltorch.factorized_layers": [[16, 1, 1, "", "FactorizedConv"], [17, 1, 1, "", "FactorizedEmbedding"], [18, 1, 1, "", "FactorizedLinear"], [19, 1, 1, "", "TCL"], [20, 1, 1, "", "TRL"]], "tltorch.factorized_layers.FactorizedConv": [[16, 3, 1, "", "extra_repr"], [16, 3, 1, "", "forward"], [16, 3, 1, "", "from_conv"], [16, 3, 1, "", "get_conv"], [16, 3, 1, "", "set"], [16, 3, 1, "", "transduct"]], "tltorch.factorized_layers.FactorizedEmbedding": [[17, 3, 1, "", "forward"], [17, 3, 1, "", "from_embedding"], [17, 3, 1, "", "from_embedding_list"]], "tltorch.factorized_layers.FactorizedLinear": [[18, 3, 1, "", "forward"], [18, 3, 1, "", "from_linear"], [18, 3, 1, "", "from_linear_list"]], "tltorch.factorized_layers.TCL": [[19, 3, 1, "", "forward"], [19, 3, 1, "", "reset_parameters"]], "tltorch.factorized_layers.TRL": [[20, 3, 1, "", "forward"], [20, 3, 1, "", "init_from_linear"], [20, 3, 1, "", "init_from_random"]], "tltorch.factorized_tensors.init": [[21, 4, 1, "", "block_tt_init"], [22, 4, 1, "", "cp_init"], [23, 4, 1, "", "tensor_init"], [24, 4, 1, "", "tt_init"], [25, 4, 1, "", "tucker_init"]], "tltorch.tensor_hooks": [[26, 1, 1, "", "TensorDropout"], [27, 4, 1, "", "remove_tensor_dropout"], [28, 4, 1, "", "remove_tensor_lasso"], [29, 4, 1, "", "tensor_dropout"], [30, 4, 1, "", "tensor_lasso"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:property", "3": "py:method", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "property", "Python property"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"]}, "titleterms": {"about": 0, "u": 0, "core": 0, "team": 0, "support": 0, "style": 1, "api": [1, 6], "contribut": 2, "how": 2, "guidelin": 2, "develop": 3, "guid": [3, 32], "deep": 4, "tensor": [4, 6, 33, 34, 35], "learn": 4, "improv": 4, "your": 4, "neural": 4, "network": 4, "method": 4, "instal": 5, "tensorli": [5, 35], "torch": [5, 35], "pre": 5, "requisit": 5, "pip": 5, "recommend": 5, "clone": 5, "github": 5, "repositori": 5, "run": 5, "test": 5, "build": 5, "document": 5, "refer": 6, "factor": [6, 31], "matric": 6, "initi": [6, 33], "regress": [6, 35], "layer": [6, 31, 34, 35], "contract": 6, "linear": [6, 34], "convolut": [6, 31], "embed": 6, "dropout": [6, 33], "l1": 6, "regular": [6, 33], "tltorch": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "blocktt": 7, "cptensor": [8, 9], "densetensor": [10, 11], "factorizedtensor": 12, "tttensor": 13, "tensorizedtensor": 14, "tuckertensor": 15, "factorized_lay": [16, 17, 18, 19, 20], "factorizedconv": 16, "factorizedembed": 17, "factorizedlinear": 18, "tcl": 19, "trl": [20, 35], "factorized_tensor": [21, 22, 23, 24, 25], "init": [21, 22, 23, 24, 25], "block_tt_init": 21, "cp_init": 22, "tensor_init": 23, "tt_init": 24, "tucker_init": 25, "tensor_hook": [26, 27, 28, 29, 30], "tensordropout": 26, "remove_tensor_dropout": 27, "remove_tensor_lasso": 28, "tensor_dropout": 29, "tensor_lasso": 30, "creat": 31, "from": 31, "random": [31, 35], "an": 31, "exist": 31, "effici": 31, "block": 31, "user": 32, "hook": 33, "lasso": 33, "rank": 33, "decomposit": 33}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"About Us": [[0, "about-us"]], "Core team": [[0, "core-team"]], "Supporters": [[0, "supporters"]], "Style and API": [[1, "style-and-api"]], "Contributing": [[2, "contributing"]], "How-to": [[2, "how-to"]], "Guidelines": [[2, "guidelines"]], "Development guide": [[3, "development-guide"]], "Deep Tensorized Learning": [[4, "deep-tensorized-learning"]], "Improve your neural networks with tensor methods": [[4, "improve-your-neural-networks-with-tensor-methods"]], "Installing tensorly-Torch": [[5, "installing-tensorly-torch"]], "Pre-requisite": [[5, "pre-requisite"]], "Installing with pip (recommended)": [[5, "installing-with-pip-recommended"]], "Cloning the github repository": [[5, "cloning-the-github-repository"]], "Running the tests": [[5, "running-the-tests"]], "Building the documentation": [[5, "building-the-documentation"]], "API reference": [[6, "api-reference"]], "Factorized Tensors": [[6, "factorized-tensors"]], "Tensorized Matrices": [[6, "tensorized-matrices"]], "Initialization": [[6, "module-tltorch.factorized_tensors"]], "Tensor Regression Layers": [[6, "module-tltorch.factorized_layers"], [35, "tensor-regression-layers"]], "Tensor Contraction Layers": [[6, "tensor-contraction-layers"]], "Factorized Linear Layers": [[6, "factorized-linear-layers"]], "Factorized Convolutions": [[6, "factorized-convolutions"]], "Factorized Embeddings": [[6, "factorized-embeddings"]], "Tensor Dropout": [[6, "module-tltorch.tensor_hooks"]], "L1 Regularization": [[6, "l1-regularization"]], "tltorch.BlockTT": [[7, "tltorch-blocktt"]], "tltorch.CPTensor": [[8, "tltorch-cptensor"]], "tltorch.CPTensorized": [[9, "tltorch-cptensorized"]], "tltorch.DenseTensor": [[10, "tltorch-densetensor"]], "tltorch.DenseTensorized": [[11, "tltorch-densetensorized"]], "tltorch.FactorizedTensor": [[12, "tltorch-factorizedtensor"]], "tltorch.TTTensor": [[13, "tltorch-tttensor"]], "tltorch.TensorizedTensor": [[14, "tltorch-tensorizedtensor"]], "tltorch.TuckerTensor": [[15, "tltorch-tuckertensor"]], "tltorch.factorized_layers.FactorizedConv": [[16, "tltorch-factorized-layers-factorizedconv"]], "tltorch.factorized_layers.FactorizedEmbedding": [[17, "tltorch-factorized-layers-factorizedembedding"]], "tltorch.factorized_layers.FactorizedLinear": [[18, "tltorch-factorized-layers-factorizedlinear"]], "tltorch.factorized_layers.TCL": [[19, "tltorch-factorized-layers-tcl"]], "tltorch.factorized_layers.TRL": [[20, "tltorch-factorized-layers-trl"]], "tltorch.factorized_tensors.init.block_tt_init": [[21, "tltorch-factorized-tensors-init-block-tt-init"]], "tltorch.factorized_tensors.init.cp_init": [[22, "tltorch-factorized-tensors-init-cp-init"]], "tltorch.factorized_tensors.init.tensor_init": [[23, "tltorch-factorized-tensors-init-tensor-init"]], "tltorch.factorized_tensors.init.tt_init": [[24, "tltorch-factorized-tensors-init-tt-init"]], "tltorch.factorized_tensors.init.tucker_init": [[25, "tltorch-factorized-tensors-init-tucker-init"]], "tltorch.tensor_hooks.TensorDropout": [[26, "tltorch-tensor-hooks-tensordropout"]], "tltorch.tensor_hooks.remove_tensor_dropout": [[27, "tltorch-tensor-hooks-remove-tensor-dropout"]], "tltorch.tensor_hooks.remove_tensor_lasso": [[28, "tltorch-tensor-hooks-remove-tensor-lasso"]], "tltorch.tensor_hooks.tensor_dropout": [[29, "tltorch-tensor-hooks-tensor-dropout"]], "tltorch.tensor_hooks.tensor_lasso": [[30, "tltorch-tensor-hooks-tensor-lasso"]], "Factorized Convolutional Layers": [[31, "factorized-convolutional-layers"]], "Creating Factorized Convolutions": [[31, "creating-factorized-convolutions"]], "From Random": [[31, "from-random"]], "From an existing Convolution": [[31, "from-an-existing-convolution"]], "Efficient Convolutional Blocks": [[31, "efficient-convolutional-blocks"]], "User guide": [[32, "user-guide"]], "Tensor Hooks": [[33, "tensor-hooks"]], "Tensor dropout": [[33, "tensor-dropout"]], "Lasso rank regularization": [[33, "lasso-rank-regularization"]], "Initializing tensor decomposition": [[33, "initializing-tensor-decomposition"]], "Tensorized Linear Layers": [[34, "tensorized-linear-layers"]], "TRL in TensorLy-Torch": [[35, "trl-in-tensorly-torch"]], "Random TRL": [[35, "random-trl"]]}, "indexentries": {"module": [[6, "module-tltorch"], [6, "module-tltorch.factorized_layers"], [6, "module-tltorch.factorized_tensors"], [6, "module-tltorch.tensor_hooks"]], "tltorch": [[6, "module-tltorch"]], "tltorch.factorized_layers": [[6, "module-tltorch.factorized_layers"]], "tltorch.factorized_tensors": [[6, "module-tltorch.factorized_tensors"]], "tltorch.tensor_hooks": [[6, "module-tltorch.tensor_hooks"]], "blocktt (class in tltorch)": [[7, "tltorch.BlockTT"]], "decomposition (tltorch.blocktt property)": [[7, "tltorch.BlockTT.decomposition"]], "from_tensor() (tltorch.blocktt class method)": [[7, "tltorch.BlockTT.from_tensor"]], "new() (tltorch.blocktt class method)": [[7, "tltorch.BlockTT.new"]], "normal_() (tltorch.blocktt method)": [[7, "tltorch.BlockTT.normal_"]], "to_tensor() (tltorch.blocktt method)": [[7, "tltorch.BlockTT.to_tensor"]], "cptensor (class in tltorch)": [[8, "tltorch.CPTensor"]], "decomposition (tltorch.cptensor property)": [[8, "tltorch.CPTensor.decomposition"]], "from_tensor() (tltorch.cptensor class method)": [[8, "tltorch.CPTensor.from_tensor"]], "new() (tltorch.cptensor class method)": [[8, "tltorch.CPTensor.new"]], "normal_() (tltorch.cptensor method)": [[8, "tltorch.CPTensor.normal_"]], "to_tensor() (tltorch.cptensor method)": [[8, "tltorch.CPTensor.to_tensor"]], "transduct() (tltorch.cptensor method)": [[8, "tltorch.CPTensor.transduct"]], "cptensorized (class in tltorch)": [[9, "tltorch.CPTensorized"]], "from_tensor() (tltorch.cptensorized class method)": [[9, "tltorch.CPTensorized.from_tensor"]], "new() (tltorch.cptensorized class method)": [[9, "tltorch.CPTensorized.new"]], "densetensor (class in tltorch)": [[10, "tltorch.DenseTensor"]], "decomposition (tltorch.densetensor property)": [[10, "tltorch.DenseTensor.decomposition"]], "from_tensor() (tltorch.densetensor class method)": [[10, "tltorch.DenseTensor.from_tensor"]], "new() (tltorch.densetensor class method)": [[10, "tltorch.DenseTensor.new"]], "normal_() (tltorch.densetensor method)": [[10, "tltorch.DenseTensor.normal_"]], "to_tensor() (tltorch.densetensor method)": [[10, "tltorch.DenseTensor.to_tensor"]], "densetensorized (class in tltorch)": [[11, "tltorch.DenseTensorized"]], "from_tensor() (tltorch.densetensorized class method)": [[11, "tltorch.DenseTensorized.from_tensor"]], "new() (tltorch.densetensorized class method)": [[11, "tltorch.DenseTensorized.new"]], "factorizedtensor (class in tltorch)": [[12, "tltorch.FactorizedTensor"]], "decomposition (tltorch.factorizedtensor property)": [[12, "tltorch.FactorizedTensor.decomposition"]], "dim() (tltorch.factorizedtensor method)": [[12, "tltorch.FactorizedTensor.dim"]], "forward() (tltorch.factorizedtensor method)": [[12, "tltorch.FactorizedTensor.forward"]], "from_tensor() (tltorch.factorizedtensor class method)": [[12, "tltorch.FactorizedTensor.from_tensor"]], "name (tltorch.factorizedtensor property)": [[12, "tltorch.FactorizedTensor.name"]], "ndim (tltorch.factorizedtensor property)": [[12, "tltorch.FactorizedTensor.ndim"]], "new() (tltorch.factorizedtensor class method)": [[12, "tltorch.FactorizedTensor.new"]], "normal_() (tltorch.factorizedtensor method)": [[12, "tltorch.FactorizedTensor.normal_"]], "size() (tltorch.factorizedtensor method)": [[12, "tltorch.FactorizedTensor.size"]], "to_tensor() (tltorch.factorizedtensor method)": [[12, "tltorch.FactorizedTensor.to_tensor"]], "tttensor (class in tltorch)": [[13, "tltorch.TTTensor"]], "decomposition (tltorch.tttensor property)": [[13, "tltorch.TTTensor.decomposition"]], "from_tensor() (tltorch.tttensor class method)": [[13, "tltorch.TTTensor.from_tensor"]], "new() (tltorch.tttensor class method)": [[13, "tltorch.TTTensor.new"]], "normal_() (tltorch.tttensor method)": [[13, "tltorch.TTTensor.normal_"]], "to_tensor() (tltorch.tttensor method)": [[13, "tltorch.TTTensor.to_tensor"]], "transduct() (tltorch.tttensor method)": [[13, "tltorch.TTTensor.transduct"]], "tensorizedtensor (class in tltorch)": [[14, "tltorch.TensorizedTensor"]], "from_matrix() (tltorch.tensorizedtensor class method)": [[14, "tltorch.TensorizedTensor.from_matrix"]], "from_tensor() (tltorch.tensorizedtensor class method)": [[14, "tltorch.TensorizedTensor.from_tensor"]], "new() (tltorch.tensorizedtensor class method)": [[14, "tltorch.TensorizedTensor.new"]], "to_matrix() (tltorch.tensorizedtensor method)": [[14, "tltorch.TensorizedTensor.to_matrix"]], "tuckertensor (class in tltorch)": [[15, "tltorch.TuckerTensor"]], "decomposition (tltorch.tuckertensor property)": [[15, "tltorch.TuckerTensor.decomposition"]], "from_tensor() (tltorch.tuckertensor class method)": [[15, "tltorch.TuckerTensor.from_tensor"]], "init_from_tensor() (tltorch.tuckertensor method)": [[15, "tltorch.TuckerTensor.init_from_tensor"]], "new() (tltorch.tuckertensor class method)": [[15, "tltorch.TuckerTensor.new"]], "normal_() (tltorch.tuckertensor method)": [[15, "tltorch.TuckerTensor.normal_"]], "to_tensor() (tltorch.tuckertensor method)": [[15, "tltorch.TuckerTensor.to_tensor"]], "factorizedconv (class in tltorch.factorized_layers)": [[16, "tltorch.factorized_layers.FactorizedConv"]], "extra_repr() (tltorch.factorized_layers.factorizedconv method)": [[16, "tltorch.factorized_layers.FactorizedConv.extra_repr"]], "forward() (tltorch.factorized_layers.factorizedconv method)": [[16, "tltorch.factorized_layers.FactorizedConv.forward"]], "from_conv() (tltorch.factorized_layers.factorizedconv class method)": [[16, "tltorch.factorized_layers.FactorizedConv.from_conv"]], "get_conv() (tltorch.factorized_layers.factorizedconv method)": [[16, "tltorch.factorized_layers.FactorizedConv.get_conv"]], "set() (tltorch.factorized_layers.factorizedconv method)": [[16, "tltorch.factorized_layers.FactorizedConv.set"]], "transduct() (tltorch.factorized_layers.factorizedconv method)": [[16, "tltorch.factorized_layers.FactorizedConv.transduct"]], "factorizedembedding (class in tltorch.factorized_layers)": [[17, "tltorch.factorized_layers.FactorizedEmbedding"]], "forward() (tltorch.factorized_layers.factorizedembedding method)": [[17, "tltorch.factorized_layers.FactorizedEmbedding.forward"]], "from_embedding() (tltorch.factorized_layers.factorizedembedding class method)": [[17, "tltorch.factorized_layers.FactorizedEmbedding.from_embedding"]], "from_embedding_list() (tltorch.factorized_layers.factorizedembedding class method)": [[17, "tltorch.factorized_layers.FactorizedEmbedding.from_embedding_list"]], "factorizedlinear (class in tltorch.factorized_layers)": [[18, "tltorch.factorized_layers.FactorizedLinear"]], "forward() (tltorch.factorized_layers.factorizedlinear method)": [[18, "tltorch.factorized_layers.FactorizedLinear.forward"]], "from_linear() (tltorch.factorized_layers.factorizedlinear class method)": [[18, "tltorch.factorized_layers.FactorizedLinear.from_linear"]], "from_linear_list() (tltorch.factorized_layers.factorizedlinear class method)": [[18, "tltorch.factorized_layers.FactorizedLinear.from_linear_list"]], "tcl (class in tltorch.factorized_layers)": [[19, "tltorch.factorized_layers.TCL"]], "forward() (tltorch.factorized_layers.tcl method)": [[19, "tltorch.factorized_layers.TCL.forward"]], "reset_parameters() (tltorch.factorized_layers.tcl method)": [[19, "tltorch.factorized_layers.TCL.reset_parameters"]], "trl (class in tltorch.factorized_layers)": [[20, "tltorch.factorized_layers.TRL"]], "forward() (tltorch.factorized_layers.trl method)": [[20, "tltorch.factorized_layers.TRL.forward"]], "init_from_linear() (tltorch.factorized_layers.trl method)": [[20, "tltorch.factorized_layers.TRL.init_from_linear"]], "init_from_random() (tltorch.factorized_layers.trl method)": [[20, "tltorch.factorized_layers.TRL.init_from_random"]], "block_tt_init() (in module tltorch.factorized_tensors.init)": [[21, "tltorch.factorized_tensors.init.block_tt_init"]], "cp_init() (in module tltorch.factorized_tensors.init)": [[22, "tltorch.factorized_tensors.init.cp_init"]], "tensor_init() (in module tltorch.factorized_tensors.init)": [[23, "tltorch.factorized_tensors.init.tensor_init"]], "tt_init() (in module tltorch.factorized_tensors.init)": [[24, "tltorch.factorized_tensors.init.tt_init"]], "tucker_init() (in module tltorch.factorized_tensors.init)": [[25, "tltorch.factorized_tensors.init.tucker_init"]], "tensordropout (class in tltorch.tensor_hooks)": [[26, "tltorch.tensor_hooks.TensorDropout"]], "remove_tensor_dropout() (in module tltorch.tensor_hooks)": [[27, "tltorch.tensor_hooks.remove_tensor_dropout"]], "remove_tensor_lasso() (in module tltorch.tensor_hooks)": [[28, "tltorch.tensor_hooks.remove_tensor_lasso"]], "tensor_dropout() (in module tltorch.tensor_hooks)": [[29, "tltorch.tensor_hooks.tensor_dropout"]], "tensor_lasso() (in module tltorch.tensor_hooks)": [[30, "tltorch.tensor_hooks.tensor_lasso"]]}})