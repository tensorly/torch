Search.setIndex({"docnames": ["about", "dev_guide/api", "dev_guide/contributing", "dev_guide/index", "index", "install", "modules/api", "modules/generated/tltorch.BlockTT", "modules/generated/tltorch.CPTensor", "modules/generated/tltorch.CPTensorized", "modules/generated/tltorch.FactorizedTensor", "modules/generated/tltorch.TTTensor", "modules/generated/tltorch.TensorizedTensor", "modules/generated/tltorch.TuckerTensor", "modules/generated/tltorch.factorized_layers.FactorizedConv", "modules/generated/tltorch.factorized_layers.FactorizedEmbedding", "modules/generated/tltorch.factorized_layers.FactorizedLinear", "modules/generated/tltorch.factorized_layers.TCL", "modules/generated/tltorch.factorized_layers.TRL", "modules/generated/tltorch.init.cp_init", "modules/generated/tltorch.init.tensor_init", "modules/generated/tltorch.init.tt_init", "modules/generated/tltorch.init.tucker_init", "modules/generated/tltorch.tensor_hooks.TensorDropout", "modules/generated/tltorch.tensor_hooks.remove_tensor_dropout", "modules/generated/tltorch.tensor_hooks.remove_tensor_lasso", "modules/generated/tltorch.tensor_hooks.tensor_dropout", "modules/generated/tltorch.tensor_hooks.tensor_lasso", "user_guide/factorized_conv", "user_guide/index", "user_guide/tensor_hooks", "user_guide/tensorized_linear", "user_guide/trl"], "filenames": ["about.rst", "dev_guide/api.rst", "dev_guide/contributing.rst", "dev_guide/index.rst", "index.rst", "install.rst", "modules/api.rst", "modules/generated/tltorch.BlockTT.rst", "modules/generated/tltorch.CPTensor.rst", "modules/generated/tltorch.CPTensorized.rst", "modules/generated/tltorch.FactorizedTensor.rst", "modules/generated/tltorch.TTTensor.rst", "modules/generated/tltorch.TensorizedTensor.rst", "modules/generated/tltorch.TuckerTensor.rst", "modules/generated/tltorch.factorized_layers.FactorizedConv.rst", "modules/generated/tltorch.factorized_layers.FactorizedEmbedding.rst", "modules/generated/tltorch.factorized_layers.FactorizedLinear.rst", "modules/generated/tltorch.factorized_layers.TCL.rst", "modules/generated/tltorch.factorized_layers.TRL.rst", "modules/generated/tltorch.init.cp_init.rst", "modules/generated/tltorch.init.tensor_init.rst", "modules/generated/tltorch.init.tt_init.rst", "modules/generated/tltorch.init.tucker_init.rst", "modules/generated/tltorch.tensor_hooks.TensorDropout.rst", "modules/generated/tltorch.tensor_hooks.remove_tensor_dropout.rst", "modules/generated/tltorch.tensor_hooks.remove_tensor_lasso.rst", "modules/generated/tltorch.tensor_hooks.tensor_dropout.rst", "modules/generated/tltorch.tensor_hooks.tensor_lasso.rst", "user_guide/factorized_conv.rst", "user_guide/index.rst", "user_guide/tensor_hooks.rst", "user_guide/tensorized_linear.rst", "user_guide/trl.rst"], "titles": ["About Us", "Style and API", "Contributing", "Development guide", "Deep Tensorized Learning", "Installing tensorly-Torch", "API reference", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tltorch</span></code>.BlockTT", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tltorch</span></code>.CPTensor", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tltorch</span></code>.CPTensorized", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tltorch</span></code>.FactorizedTensor", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tltorch</span></code>.TTTensor", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tltorch</span></code>.TensorizedTensor", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tltorch</span></code>.TuckerTensor", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tltorch.factorized_layers</span></code>.FactorizedConv", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tltorch.factorized_layers</span></code>.FactorizedEmbedding", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tltorch.factorized_layers</span></code>.FactorizedLinear", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tltorch.factorized_layers</span></code>.TCL", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tltorch.factorized_layers</span></code>.TRL", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tltorch</span></code>.init.cp_init", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tltorch</span></code>.init.tensor_init", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tltorch</span></code>.init.tt_init", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tltorch</span></code>.init.tucker_init", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tltorch.tensor_hooks</span></code>.TensorDropout", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tltorch.tensor_hooks</span></code>.remove_tensor_dropout", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tltorch.tensor_hooks</span></code>.remove_tensor_lasso", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tltorch.tensor_hooks</span></code>.tensor_dropout", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tltorch.tensor_hooks</span></code>.tensor_lasso", "Factorized Convolutional Layers", "User guide", "Tensor Hooks", "Tensorized Linear Layers", "Tensor Regression Layers"], "terms": {"tensorli": [0, 1, 2, 4, 6, 28, 29, 30, 31], "torch": [0, 1, 2, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 27, 28, 29, 30, 31], "i": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 26, 27, 28, 30, 31, 32], "an": [0, 2, 5, 6, 10, 12, 16, 27, 29, 30, 32], "open": [0, 2], "sourc": [0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 23, 24, 25, 26, 27], "effort": 0, "led": 0, "primarili": 0, "nvidia": 0, "research": 0, "jean": [0, 18], "kossaifi": [0, 17, 18], "It": [0, 4, 5, 28, 29, 32], "part": [0, 5], "project": [0, 1, 2], "build": [0, 4, 6, 29], "top": [0, 4, 6, 29], "order": [0, 4, 10, 12, 14, 28, 31, 32], "provid": [0, 4, 6, 29, 30], "out": [0, 4, 6, 29], "box": [0, 4, 6, 29], "pytorch": [0, 4, 6, 16, 28, 29], "tensor": [0, 2, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 23, 24, 25, 26, 27, 28, 29], "layer": [0, 4, 14, 15, 16, 17, 18, 27, 29, 30], "deep": [0, 6, 17, 29, 32], "learn": [0, 18], "anima": [0, 18], "anandkumar": [0, 17, 18], "wonmin": 0, "byeon": 0, "saurav": 0, "muralidharan": 0, "The": [0, 5, 6, 12, 13, 14, 16, 27, 32], "In": [1, 4, 6, 28, 30, 32], "more": [1, 4], "gener": [1, 4, 5, 6, 27, 32], "we": [1, 2, 4, 13, 28, 30], "try": [1, 28], "maintain": 1, "simpl": [1, 4, 30], "consist": 1, "here": [1, 5, 27], "ar": [1, 2, 4, 5, 12, 13, 14, 18, 26, 27, 28, 31], "some": [1, 28], "element": 1, "consid": 1, "come": [1, 4, 5], "soon": 1, "activ": [2, 32], "welcom": 2, "new": [2, 4, 7, 8, 9, 10, 11, 12, 13, 14, 24, 25, 26, 27, 30], "If": [2, 5, 7, 8, 9, 10, 11, 12, 13, 27, 28], "you": [2, 4, 5, 6, 14, 27, 28, 30, 31], "know": 2, "method": [2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 23, 29], "should": [2, 6, 14, 15, 16], "spot": 2, "ani": [2, 4, 6, 28, 29, 30], "mistak": 2, "typo": 2, "miss": 2, "document": [2, 4], "etc": 2, "pleas": 2, "report": 2, "even": [2, 29], "better": [2, 32], "pull": 2, "request": 2, "To": [2, 10, 14, 30], "make": [2, 4, 5, 30], "sure": 2, "relev": 2, "alreadi": [2, 31], "work": 2, "can": [2, 4, 5, 6, 27, 28, 29, 30, 31], "issu": [2, 30, 32], "add": [2, 6, 8, 11, 14, 30], "code": [2, 29, 32], "fix": 2, "want": [2, 4, 5], "github": 2, "repositori": 2, "For": [2, 4, 15, 18, 23, 28, 30], "each": [2, 30, 31], "function": [2, 6, 14, 15, 16, 30], "class": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 23, 28], "expect": 2, "help": 2, "docstr": 2, "numpi": [2, 4, 5, 32], "format": [2, 12], "well": [2, 4, 5], "unit": 2, "test": [2, 4], "especi": 2, "futur": 2, "refactor": 2, "exis": 2, "broken": 2, "check": 2, "exist": [2, 7, 8, 9, 10, 11, 12, 13, 14, 16, 29], "exampl": [2, 8, 10, 11, 13, 24, 25, 26, 27], "don": [2, 13, 27, 30], "t": [2, 13, 17, 27, 30], "hesit": 2, "contact": 2, "u": [2, 5], "unsur": 2, "have": [2, 4, 5, 6, 7, 9, 10, 12, 13, 27, 28, 30, 31], "question": 2, "contribut": 3, "how": [3, 7, 9, 12, 13, 32], "guidelin": 3, "style": 3, "api": [3, 4], "batteri": 4, "includ": 4, "onli": [4, 7, 8, 10, 11, 13, 18, 26], "librari": [4, 28], "all": [4, 5, 10, 14, 15, 16, 17, 26], "tri": 4, "easi": [4, 30], "possibl": [4, 28, 31], "us": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 28, 29, 30], "within": [4, 10, 14, 15, 16, 29], "leverag": [4, 32], "structur": [4, 32], "data": [4, 28, 31], "easili": [4, 6, 28, 30, 31], "through": [4, 6, 13, 27, 28, 32], "trl": [4, 29, 30], "tcl": 4, "factor": [4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 24, 25, 26, 27, 29, 30, 31], "convolut": [4, 14, 29, 32], "built": 4, "do": [4, 31, 32], "import": [4, 28, 30, 31, 32], "directli": [4, 6, 14, 16, 18, 28], "model": [4, 15, 32], "initi": [4, 13, 14, 15, 18, 29], "decomposit": [4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 23, 24, 25, 26, 28, 29], "tricki": 4, "take": [4, 14, 15, 16, 30], "care": [4, 14, 15, 16, 30], "whether": [4, 15, 16], "randomli": [4, 14, 17, 18, 30], "our": [4, 6, 28, 30], "modul": [4, 6, 14, 15, 16, 18, 24, 25, 26, 28, 30], "from": [4, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 24, 25, 27, 29, 31, 32], "pretrain": 4, "hook": [4, 14, 15, 16, 23, 29], "augment": 4, "architectur": 4, "robustifi": 4, "dropout": [4, 23, 24, 25, 26, 29], "automat": [4, 15, 27], "select": [4, 26, 30], "rank": [4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 24, 25, 26, 27, 28, 29, 31, 32], "end": 4, "l1": [4, 27, 30], "regular": [4, 14, 15, 16, 27, 29], "avail": 4, "alwai": 4, "ad": [4, 13], "compar": 4, "between": [4, 27, 32], "perform": [4, 14, 15, 16, 17, 18], "variou": 4, "base": [4, 6], "matrix": [4, 7, 9, 11, 12, 16], "algebra": [4, 29], "oper": [4, 6], "higher": [4, 31, 32], "typic": [4, 32], "map": [4, 32], "fact": 4, "abil": 4, "preserv": [4, 32], "local": 4, "along": 4, "larg": [4, 30, 32], "dataset": 4, "effici": [4, 6, 15, 29, 32], "hardwar": 4, "made": 4, "current": [4, 7, 8, 10, 11, 13], "level": [4, 17, 18], "allow": [4, 6, 18, 32], "further": 4, "individu": 4, "whole": 4, "python": [4, 5], "aim": 4, "access": [4, 27], "high": [4, 32], "core": [4, 6, 13], "regress": [4, 18, 29], "ha": [4, 13, 26, 30, 32], "flexibl": 4, "backend": 4, "run": [4, 14, 15, 16], "seamlessli": 4, "tensorflow": 4, "jax": 4, "mxnet": 4, "cupi": 4, "conveni": [4, 6], "heavi": 4, "lift": 4, "benefit": 4, "wrap": 4, "nice": 4, "instanc": [4, 14, 15, 16, 23, 27, 28, 30], "2d": 4, "3d": 4, "parametr": [4, 6, 12, 14, 16, 24, 25, 26, 30, 31], "cp": [4, 7, 8, 9, 10, 11, 12, 13, 14, 16, 18, 24, 25, 26, 27, 28, 30], "result": [4, 5, 32], "separ": 4, "replac": [4, 6, 15, 18], "origin": [4, 16], "seri": 4, "small": [4, 30], "ones": [4, 8, 11, 14], "These": [4, 6], "also": [4, 6, 17, 27, 30, 31, 32], "tucker": [4, 7, 8, 9, 10, 11, 12, 13, 18, 28, 30, 31], "train": [4, 11, 16, 30, 32], "implement": [4, 14, 16, 28], "other": [4, 13], "contract": [4, 16, 17], "linear": [4, 16, 18, 29, 32], "start": [4, 5], "need": [5, 14, 15, 16, 27], "3": [5, 8, 10, 11, 13, 15, 23, 24, 25, 26, 27, 28], "scipi": 5, "pain": 5, "free": 5, "experi": 5, "anaconda": 5, "distribiut": 5, "ship": 5, "readi": 5, "simpli": [5, 30], "your": [5, 14, 27, 28], "termin": 5, "option": [5, 7, 8, 9, 10, 11, 12, 13], "updat": [5, 27], "packag": 5, "cd": 5, "git": 5, "http": 5, "com": 5, "Then": 5, "edit": 5, "mode": [5, 8, 11, 13, 14, 16, 18, 23, 26], "e": [5, 8, 11, 13, 14, 16, 28, 31, 32], "equival": [5, 10, 14], "uni": 5, "vital": 5, "thi": [5, 6, 13, 14, 15, 16, 18, 30, 31, 32], "pytest": 5, "tltorch": [5, 6, 28, 30, 31, 32], "slimit": 5, "minifi": 5, "rcssmin": 5, "now": [5, 28, 31, 32], "doc": 5, "html": 5, "_build": 5, "neural": [6, 32], "network": [6, 10, 18, 28, 29, 32], "concept": [6, 32], "which": [6, 13, 16, 23, 24, 25, 26, 28], "instead": [6, 13, 14, 15, 16, 18], "dens": [6, 8, 10, 11, 13], "creat": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 27, 29, 30, 31, 32], "main": [6, 7, 8, 9, 10, 11, 12, 13, 14], "specif": 6, "subclass": [6, 14, 15, 16], "repres": 6, "form": [6, 7, 8, 9, 10, 11, 12, 13], "low": [6, 16, 28, 32], "n": 6, "dimension": 6, "A": [6, 17, 32], "drop": [6, 15, 26], "": [6, 14, 27, 28, 30, 31, 32], "never": 6, "reconstruct": [6, 7, 8, 10, 11, 12, 13, 14, 16, 30], "full": [6, 7, 8, 9, 10, 11, 12, 13, 16, 18, 30], "tabl": [6, 15], "remov": [6, 24, 25, 27, 30], "below": 6, "unless": 6, "particular": 6, "arg": [7, 8, 9, 10, 11, 12, 13], "kwarg": [7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18], "attribut": [7, 8, 10, 11, 12, 13, 17], "return": [7, 8, 9, 10, 11, 12, 13, 14, 26, 27], "paramet": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 23, 24, 25, 26, 27, 28, 32], "compos": [7, 8, 10, 11, 13], "init_from_tensor": [7, 8, 11, 13], "classmethod": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "tensorized_shap": [7, 9, 12, 16], "devic": [7, 8, 9, 11, 13, 14, 15, 16, 17, 18, 28, 32], "none": [7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18], "dtype": [7, 8, 9, 11, 13, 14, 15, 16, 17, 18, 28, 31, 32], "wai": [7, 8, 9, 10, 11, 12, 13, 30], "tupl": [7, 8, 9, 10, 11, 12, 13, 15, 16, 28], "int": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 23, 26], "same": [7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 27, 28, 30, 32], "float": [7, 8, 9, 10, 11, 12, 13, 16, 23, 26, 27], "n_matric": [7, 9, 12], "default": [7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 26, 27, 28], "indic": [7, 9, 10, 12, 14, 15, 16], "mani": [7, 9, 12], "matric": [7, 9, 12, 16, 31], "jointli": [7, 9, 12], "tt": [7, 8, 9, 10, 11, 12, 13], "decompos": [7, 8, 9, 10, 11, 12, 13, 14, 15, 18], "tensorizedtensor": [7, 9, 15], "rais": [7, 8, 9, 10, 11, 12, 13], "valueerror": [7, 8, 9, 10, 11, 12, 13], "given": [7, 8, 9, 10, 11, 12, 13], "doe": [7, 8, 9, 10, 11, 12, 13], "properti": [7, 8, 10, 11, 13], "to_tensor": [7, 8, 10, 11, 13], "its": [7, 8, 10, 11, 13], "normal_": [7, 8, 10, 11, 13, 24, 25, 26, 27, 30], "mean": [7, 8, 10, 11, 13, 30], "0": [7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 24, 25, 26, 27, 28, 30, 31], "std": [7, 8, 10, 11, 13], "1": [7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 23, 26, 27], "inial": [7, 8, 10, 11, 13], "follow": [7, 8, 10, 11, 13, 28], "gaussian": [7, 8, 10, 11, 13], "distribut": [7, 8, 10, 11, 13], "support": [7, 8, 10, 11, 13, 16], "standard": [7, 8, 10, 11, 13, 30], "deviat": [7, 8, 10, 11, 13, 30], "self": [7, 8, 10, 11, 13, 14], "from_tensor": [7, 8, 9, 10, 11, 12, 13], "shape": [7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 23], "tensorfactor": [7, 8, 9, 10, 11, 12, 13], "weight": [8, 15, 16, 18, 27, 30], "4": [8, 10, 11, 13, 23, 24, 25, 26, 27, 31, 32], "2": [8, 10, 11, 12, 13, 16, 24, 25, 26, 27, 28, 31, 32], "half": [8, 10, 11, 13], "would": [8, 10, 11, 13, 28], "tucker_tensor": [8, 10, 11, 13], "factorizedtensor": [8, 11, 13, 23, 24, 25, 26, 27], "5": [8, 10, 11, 13, 24, 25, 26, 27, 28, 30, 31, 32], "transduct": [8, 11, 14], "new_dim": [8, 11], "new_factor": [8, 11], "dimens": [8, 11, 12, 13, 14, 15, 16, 17, 23, 26, 32], "where": [8, 11, 14], "insert": [8, 11, 14], "after": [8, 11, 14, 27, 30], "channel": [8, 11, 14], "befor": [8, 11, 14, 32], "g": [8, 11, 13, 14, 16, 28, 32], "time": [8, 11, 14, 32], "height": [8, 11, 14], "width": [8, 11, 14], "must": [10, 16], "name": [10, 23, 28], "ndim": [10, 12], "tensor_shap": [10, 12], "numel": 10, "forward": [10, 14, 15, 16, 17, 18], "index": 10, "dure": [10, 16, 30], "pass": [10, 14, 15, 16, 17, 18, 28, 32], "dim": [10, 12, 13], "note": 10, "fact_tensor": [10, 30], "size": [10, 14, 16, 17, 18, 23, 28, 31, 32], "product": [11, 32], "state": 11, "correspond": [12, 13], "underli": 12, "init_from_matrix": 12, "from_matrix": 12, "tensorized_row_shap": 12, "tensorized_column_shap": 12, "first": [12, 13, 15, 27, 28, 30, 32], "row": 12, "second": [12, 15], "column": 12, "tensorizedmatrix": 12, "to_matrix": 12, "sever": [12, 27, 32], "batch": [12, 17, 18, 31], "fixed_rank_mod": [13, 14], "unsqueezed_mod": [13, 18], "unsqueezed_init": 13, "averag": [13, 18], "list": [13, 17, 18], "essenti": 13, "unsqueez": 13, "unsqueezed_factor": 13, "valu": [13, 17, 27, 30], "in_channel": 14, "out_channel": 14, "kernel_s": [14, 28], "stride": 14, "pad": 14, "dilat": 14, "bia": [14, 16, 17, 18], "fals": [14, 16, 17, 18, 23, 26], "has_bia": 14, "n_layer": [14, 15, 16, 18], "arbitrari": 14, "from_conv_list": 14, "from_factor": 14, "reset_paramet": [14, 15, 16, 17], "x": [14, 16, 17, 18, 30, 32], "defin": [14, 15, 16, 30], "comput": [14, 15, 16, 17], "everi": [14, 15, 16], "call": [14, 15, 16], "overridden": [14, 15, 16], "although": [14, 15, 16], "recip": [14, 15, 16], "one": [14, 15, 16, 27], "afterward": [14, 15, 16], "sinc": [14, 15, 16], "former": [14, 15, 16], "regist": [14, 15, 16], "while": [14, 15, 16, 30, 32], "latter": [14, 15, 16], "silent": [14, 15, 16], "ignor": [14, 15, 16], "them": [14, 15, 16, 31], "set": [14, 17, 27], "conv": [14, 28], "get_conv": 14, "sub": 14, "joint": 14, "share": 14, "from_conv": [14, 28], "conv_lay": 14, "decompose_weight": [14, 15, 28], "true": [14, 15, 16, 18, 27, 28], "decomposition_kwarg": [14, 15, 16], "nn": [14, 15, 16, 18, 28, 31, 32], "convnd": 14, "str": [14, 15, 16, 27], "decomposed_weight": 14, "bool": [14, 15, 16, 18, 27], "kernel": [14, 28], "otherwis": [14, 18, 27], "dict": [14, 15], "decompoosit": 14, "weightss": 14, "fine_tune_transduction_onli": 14, "addit": 14, "extra_repr": 14, "extra": 14, "represent": 14, "print": 14, "custom": 14, "inform": [14, 32], "re": [14, 30], "own": 14, "both": [14, 15], "singl": [14, 16], "line": 14, "multi": [14, 32], "string": 14, "accept": 14, "num_embed": 15, "embedding_dim": 15, "auto_reshap": 15, "d": 15, "tensorized_num_embed": 15, "tensorized_embedding_dim": 15, "blocktt": 15, "8": [15, 16], "embed": 15, "compress": [15, 28, 31], "number": [15, 16, 26, 28, 32], "entri": 15, "lookup": 15, "per": 15, "reshap": [15, 31], "type": 15, "get_embed": 15, "input": [15, 16, 17, 18, 28, 32], "from_embed": 15, "embedding_lay": 15, "specifi": [15, 18, 28, 30], "from_embedding_list": 15, "embedding_layer_list": 15, "in_tensorized_featur": [16, 31], "out_tensorized_featur": [16, 31], "checkpoint": 16, "fulli": [16, 18], "connect": [16, 18], "That": 16, "express": 16, "infer": 16, "unfold": 16, "back": 16, "input_featur": 16, "in_featur": [16, 31], "could": 16, "verifi": 16, "prod": 16, "version": 16, "enabl": [16, 29], "gradient": [16, 30], "save": 16, "memori": 16, "get_linear": 16, "from_linear": [16, 31], "factorized_weight": 16, "np": [16, 32], "percentag": 16, "from_linear_list": 16, "linear_list": 16, "init": 16, "random": [16, 29], "input_shap": [17, 18, 28, 32], "verbos": [17, 18], "input_s": 17, "iter": [17, 18, 30], "exclud": [17, 18], "output": [17, 18, 32], "refer": [17, 18], "j": 17, "khanna": [17, 18], "z": 17, "lipton": [17, 18], "furlanello": [17, 18], "parsimoni": [17, 32], "net": 17, "2017": 17, "ieee": 17, "confer": 17, "vision": 17, "pattern": 17, "recognit": 17, "workshop": 17, "cvprw": 17, "honolulu": 17, "hi": 17, "pp": 17, "1940": 17, "1946": 17, "doi": 17, "10": [17, 30, 31], "1109": 17, "243": 17, "output_shap": [18, 32], "zachari": 18, "c": 18, "arinbjorn": 18, "kolbeinsson": 18, "aran": 18, "tommaso": 18, "jmlr": 18, "2020": 18, "init_from_random": 18, "decompose_full_weight": 18, "construct": 18, "init_from_linear": 18, "initialis": 18, "pool": 18, "proba": 23, "min_dim": [23, 26], "min_valu": [23, 26], "drop_test": [23, 26], "appli": [23, 24, 25, 26, 27, 28, 30], "probabl": [23, 26], "minimum": [23, 26], "32": [23, 28], "last": 23, "two": 23, "factorized_tensor": [24, 25, 26], "tensormodul": [24, 25], "tensor_dropout": 24, "p": [24, 25, 26, 30], "lasso": [25, 27, 29], "tensor_lasso": 25, "compon": [26, 30], "latent": 26, "space": 26, "larger": 26, "than": [26, 27], "been": 26, "attach": 26, "remove_tensor_dropout": 26, "penalti": [27, 30], "01": [27, 30], "clamp_weight": 27, "threshold": 27, "1e": 27, "06": 27, "normalize_loss": 27, "scale": 27, "loss": [27, 30], "clamp": 27, "6": [27, 32], "lower": 27, "raw": 27, "sum": 27, "absolut": 27, "let": [27, 28, 30, 31, 32], "sai": 27, "tensor2": 27, "7": 27, "tensorlasso": 27, "l1_loss": 27, "optim": 27, "backpropag": 27, "usual": 27, "finish": 27, "forget": [27, 30], "reset": [27, 30], "keep": [27, 30], "accumul": [27, 30], "remove_tensor_lasso": 27, "reduc": 28, "choos": [28, 30], "cpu": [28, 32], "input_channel": 28, "16": [28, 31], "output_channel": 28, "batch_siz": [28, 32], "24": 28, "kernel_shap": 28, "randn": [28, 31, 32], "float32": [28, 31, 32], "conv2d": 28, "exactli": 28, "except": 28, "either": 28, "factorizedconv": 28, "so": [28, 30], "creation": 28, "conv3d": 28, "fact_conv": 28, "Or": 28, "case": 28, "len": 28, "get": 28, "mobilenet": 28, "v2": 28, "similarli": [28, 30], "resnet": 28, "bottleneck": 28, "wa": [29, 30], "written": 29, "readili": 29, "anyon": 29, "without": [29, 30], "knowledg": 29, "block": 29, "veri": [30, 32], "manipul": 30, "helper": 30, "tucker_dropout": 30, "remove_tucker_dropout": 30, "hard": 30, "problem": 30, "One": 30, "previous": 30, "extend": 30, "introduc": 30, "object": 30, "everyth": 30, "l1_reg": 30, "tuckerl1regular": 30, "my_loss": 30, "anoth": 30, "arbitrarili": 30, "potenti": 30, "lead": [30, 32], "vanish": 30, "explod": 30, "properli": 30, "zero": 30, "02": 30, "howev": 31, "point": 31, "imagin": 31, "fact_linear": 31, "factorizedlinear": 31, "scratch": [31, 32], "still": 32, "obtain": 32, "flatten": 32, "being": 32, "approach": 32, "drawback": 32, "discard": 32, "topolog": 32, "spatial": 32, "lack": 32, "robust": 32, "allevi": 32, "abov": 32, "term": 32, "constraint": 32, "act": 32, "implicit": 32, "regur": 32, "sampl": 32, "see": 32}, "objects": {"": [[6, 0, 0, "-", "tltorch"]], "tltorch": [[7, 1, 1, "", "BlockTT"], [8, 1, 1, "", "CPTensor"], [9, 1, 1, "", "CPTensorized"], [10, 1, 1, "", "FactorizedTensor"], [11, 1, 1, "", "TTTensor"], [12, 1, 1, "", "TensorizedTensor"], [13, 1, 1, "", "TuckerTensor"], [6, 0, 0, "-", "factorized_layers"], [6, 0, 0, "-", "init"], [6, 0, 0, "-", "tensor_hooks"]], "tltorch.BlockTT": [[7, 2, 1, "", "decomposition"], [7, 3, 1, "", "from_tensor"], [7, 3, 1, "", "new"], [7, 3, 1, "", "normal_"], [7, 3, 1, "", "to_tensor"]], "tltorch.CPTensor": [[8, 2, 1, "", "decomposition"], [8, 3, 1, "", "from_tensor"], [8, 3, 1, "", "new"], [8, 3, 1, "", "normal_"], [8, 3, 1, "", "to_tensor"], [8, 3, 1, "", "transduct"]], "tltorch.CPTensorized": [[9, 3, 1, "", "from_tensor"], [9, 3, 1, "", "new"]], "tltorch.FactorizedTensor": [[10, 2, 1, "", "decomposition"], [10, 3, 1, "", "dim"], [10, 3, 1, "", "forward"], [10, 3, 1, "", "from_tensor"], [10, 2, 1, "", "name"], [10, 2, 1, "", "ndim"], [10, 3, 1, "", "new"], [10, 3, 1, "", "normal_"], [10, 3, 1, "", "size"], [10, 3, 1, "", "to_tensor"]], "tltorch.TTTensor": [[11, 2, 1, "", "decomposition"], [11, 3, 1, "", "from_tensor"], [11, 3, 1, "", "new"], [11, 3, 1, "", "normal_"], [11, 3, 1, "", "to_tensor"], [11, 3, 1, "", "transduct"]], "tltorch.TensorizedTensor": [[12, 3, 1, "", "from_matrix"], [12, 3, 1, "", "from_tensor"], [12, 3, 1, "", "new"], [12, 3, 1, "", "to_matrix"]], "tltorch.TuckerTensor": [[13, 2, 1, "", "decomposition"], [13, 3, 1, "", "from_tensor"], [13, 3, 1, "", "init_from_tensor"], [13, 3, 1, "", "new"], [13, 3, 1, "", "normal_"], [13, 3, 1, "", "to_tensor"]], "tltorch.factorized_layers": [[14, 1, 1, "", "FactorizedConv"], [15, 1, 1, "", "FactorizedEmbedding"], [16, 1, 1, "", "FactorizedLinear"], [17, 1, 1, "", "TCL"], [18, 1, 1, "", "TRL"]], "tltorch.factorized_layers.FactorizedConv": [[14, 3, 1, "", "extra_repr"], [14, 3, 1, "", "forward"], [14, 3, 1, "", "from_conv"], [14, 3, 1, "", "get_conv"], [14, 3, 1, "", "set"], [14, 3, 1, "", "transduct"]], "tltorch.factorized_layers.FactorizedEmbedding": [[15, 3, 1, "", "forward"], [15, 3, 1, "", "from_embedding"], [15, 3, 1, "", "from_embedding_list"]], "tltorch.factorized_layers.FactorizedLinear": [[16, 3, 1, "", "forward"], [16, 3, 1, "", "from_linear"], [16, 3, 1, "", "from_linear_list"]], "tltorch.factorized_layers.TCL": [[17, 3, 1, "", "forward"], [17, 3, 1, "", "reset_parameters"]], "tltorch.factorized_layers.TRL": [[18, 3, 1, "", "forward"], [18, 3, 1, "", "init_from_linear"], [18, 3, 1, "", "init_from_random"]], "tltorch.tensor_hooks": [[23, 1, 1, "", "TensorDropout"], [24, 4, 1, "", "remove_tensor_dropout"], [25, 4, 1, "", "remove_tensor_lasso"], [26, 4, 1, "", "tensor_dropout"], [27, 4, 1, "", "tensor_lasso"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:property", "3": "py:method", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "property", "Python property"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"]}, "titleterms": {"about": 0, "u": 0, "core": 0, "team": 0, "support": 0, "style": 1, "api": [1, 6], "contribut": 2, "how": 2, "guidelin": 2, "develop": 3, "guid": [3, 29], "deep": 4, "tensor": [4, 6, 30, 31, 32], "learn": 4, "improv": 4, "your": 4, "neural": 4, "network": 4, "method": 4, "instal": 5, "tensorli": [5, 32], "torch": [5, 32], "pre": 5, "requisit": 5, "pip": 5, "recommend": 5, "clone": 5, "github": 5, "repositori": 5, "run": 5, "test": 5, "build": 5, "document": 5, "refer": 6, "factor": [6, 28], "matric": 6, "initi": [6, 30], "regress": [6, 32], "layer": [6, 28, 31, 32], "contract": 6, "linear": [6, 31], "convolut": [6, 28], "embed": 6, "dropout": [6, 30], "l1": 6, "regular": [6, 30], "tltorch": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27], "blocktt": 7, "cptensor": [8, 9], "factorizedtensor": 10, "tttensor": 11, "tensorizedtensor": 12, "tuckertensor": 13, "factorized_lay": [14, 15, 16, 17, 18], "factorizedconv": 14, "factorizedembed": 15, "factorizedlinear": 16, "tcl": 17, "trl": [18, 32], "init": [19, 20, 21, 22], "cp_init": 19, "tensor_init": 20, "tt_init": 21, "tucker_init": 22, "tensor_hook": [23, 24, 25, 26, 27], "tensordropout": 23, "remove_tensor_dropout": 24, "remove_tensor_lasso": 25, "tensor_dropout": 26, "tensor_lasso": 27, "creat": 28, "from": 28, "random": [28, 32], "an": 28, "exist": 28, "effici": 28, "block": 28, "user": 29, "hook": 30, "lasso": 30, "rank": 30, "decomposit": 30}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"About Us": [[0, "about-us"]], "Core team": [[0, "core-team"]], "Supporters": [[0, "supporters"]], "Style and API": [[1, "style-and-api"]], "Contributing": [[2, "contributing"]], "How-to": [[2, "how-to"]], "Guidelines": [[2, "guidelines"]], "Development guide": [[3, "development-guide"]], "Deep Tensorized Learning": [[4, "deep-tensorized-learning"]], "Improve your neural networks with tensor methods": [[4, "improve-your-neural-networks-with-tensor-methods"]], "Installing tensorly-Torch": [[5, "installing-tensorly-torch"]], "Pre-requisite": [[5, "pre-requisite"]], "Installing with pip (recommended)": [[5, "installing-with-pip-recommended"]], "Cloning the github repository": [[5, "cloning-the-github-repository"]], "Running the tests": [[5, "running-the-tests"]], "Building the documentation": [[5, "building-the-documentation"]], "API reference": [[6, "api-reference"]], "Factorized Tensors": [[6, "factorized-tensors"]], "Tensorized Matrices": [[6, "tensorized-matrices"]], "Initialization": [[6, "module-tltorch.init"]], "Tensor Regression Layers": [[6, "module-tltorch.factorized_layers"], [32, "tensor-regression-layers"]], "Tensor Contraction Layers": [[6, "tensor-contraction-layers"]], "Factorized Linear Layers": [[6, "factorized-linear-layers"]], "Factorized Convolutions": [[6, "factorized-convolutions"]], "Factorized Embeddings": [[6, "factorized-embeddings"]], "Tensor Dropout": [[6, "module-tltorch.tensor_hooks"]], "L1 Regularization": [[6, "l1-regularization"]], "tltorch.BlockTT": [[7, "tltorch-blocktt"]], "tltorch.CPTensor": [[8, "tltorch-cptensor"]], "tltorch.CPTensorized": [[9, "tltorch-cptensorized"]], "tltorch.FactorizedTensor": [[10, "tltorch-factorizedtensor"]], "tltorch.TTTensor": [[11, "tltorch-tttensor"]], "tltorch.TensorizedTensor": [[12, "tltorch-tensorizedtensor"]], "tltorch.TuckerTensor": [[13, "tltorch-tuckertensor"]], "tltorch.factorized_layers.FactorizedConv": [[14, "tltorch-factorized-layers-factorizedconv"]], "tltorch.factorized_layers.FactorizedEmbedding": [[15, "tltorch-factorized-layers-factorizedembedding"]], "tltorch.factorized_layers.FactorizedLinear": [[16, "tltorch-factorized-layers-factorizedlinear"]], "tltorch.factorized_layers.TCL": [[17, "tltorch-factorized-layers-tcl"]], "tltorch.factorized_layers.TRL": [[18, "tltorch-factorized-layers-trl"]], "tltorch.init.cp_init": [[19, "tltorch-init-cp-init"]], "tltorch.init.tensor_init": [[20, "tltorch-init-tensor-init"]], "tltorch.init.tt_init": [[21, "tltorch-init-tt-init"]], "tltorch.init.tucker_init": [[22, "tltorch-init-tucker-init"]], "tltorch.tensor_hooks.TensorDropout": [[23, "tltorch-tensor-hooks-tensordropout"]], "tltorch.tensor_hooks.remove_tensor_dropout": [[24, "tltorch-tensor-hooks-remove-tensor-dropout"]], "tltorch.tensor_hooks.remove_tensor_lasso": [[25, "tltorch-tensor-hooks-remove-tensor-lasso"]], "tltorch.tensor_hooks.tensor_dropout": [[26, "tltorch-tensor-hooks-tensor-dropout"]], "tltorch.tensor_hooks.tensor_lasso": [[27, "tltorch-tensor-hooks-tensor-lasso"]], "Factorized Convolutional Layers": [[28, "factorized-convolutional-layers"]], "Creating Factorized Convolutions": [[28, "creating-factorized-convolutions"]], "From Random": [[28, "from-random"]], "From an existing Convolution": [[28, "from-an-existing-convolution"]], "Efficient Convolutional Blocks": [[28, "efficient-convolutional-blocks"]], "User guide": [[29, "user-guide"]], "Tensor Hooks": [[30, "tensor-hooks"]], "Tensor dropout": [[30, "tensor-dropout"]], "Lasso rank regularization": [[30, "lasso-rank-regularization"]], "Initializing tensor decomposition": [[30, "initializing-tensor-decomposition"]], "Tensorized Linear Layers": [[31, "tensorized-linear-layers"]], "TRL in TensorLy-Torch": [[32, "trl-in-tensorly-torch"]], "Random TRL": [[32, "random-trl"]]}, "indexentries": {"module": [[6, "module-tltorch"], [6, "module-tltorch.factorized_layers"], [6, "module-tltorch.init"], [6, "module-tltorch.tensor_hooks"]], "tltorch": [[6, "module-tltorch"]], "tltorch.factorized_layers": [[6, "module-tltorch.factorized_layers"]], "tltorch.init": [[6, "module-tltorch.init"]], "tltorch.tensor_hooks": [[6, "module-tltorch.tensor_hooks"]], "blocktt (class in tltorch)": [[7, "tltorch.BlockTT"]], "decomposition (tltorch.blocktt property)": [[7, "tltorch.BlockTT.decomposition"]], "from_tensor() (tltorch.blocktt class method)": [[7, "tltorch.BlockTT.from_tensor"]], "new() (tltorch.blocktt class method)": [[7, "tltorch.BlockTT.new"]], "normal_() (tltorch.blocktt method)": [[7, "tltorch.BlockTT.normal_"]], "to_tensor() (tltorch.blocktt method)": [[7, "tltorch.BlockTT.to_tensor"]], "cptensor (class in tltorch)": [[8, "tltorch.CPTensor"]], "decomposition (tltorch.cptensor property)": [[8, "tltorch.CPTensor.decomposition"]], "from_tensor() (tltorch.cptensor class method)": [[8, "tltorch.CPTensor.from_tensor"]], "new() (tltorch.cptensor class method)": [[8, "tltorch.CPTensor.new"]], "normal_() (tltorch.cptensor method)": [[8, "tltorch.CPTensor.normal_"]], "to_tensor() (tltorch.cptensor method)": [[8, "tltorch.CPTensor.to_tensor"]], "transduct() (tltorch.cptensor method)": [[8, "tltorch.CPTensor.transduct"]], "cptensorized (class in tltorch)": [[9, "tltorch.CPTensorized"]], "from_tensor() (tltorch.cptensorized class method)": [[9, "tltorch.CPTensorized.from_tensor"]], "new() (tltorch.cptensorized class method)": [[9, "tltorch.CPTensorized.new"]], "factorizedtensor (class in tltorch)": [[10, "tltorch.FactorizedTensor"]], "decomposition (tltorch.factorizedtensor property)": [[10, "tltorch.FactorizedTensor.decomposition"]], "dim() (tltorch.factorizedtensor method)": [[10, "tltorch.FactorizedTensor.dim"]], "forward() (tltorch.factorizedtensor method)": [[10, "tltorch.FactorizedTensor.forward"]], "from_tensor() (tltorch.factorizedtensor class method)": [[10, "tltorch.FactorizedTensor.from_tensor"]], "name (tltorch.factorizedtensor property)": [[10, "tltorch.FactorizedTensor.name"]], "ndim (tltorch.factorizedtensor property)": [[10, "tltorch.FactorizedTensor.ndim"]], "new() (tltorch.factorizedtensor class method)": [[10, "tltorch.FactorizedTensor.new"]], "normal_() (tltorch.factorizedtensor method)": [[10, "tltorch.FactorizedTensor.normal_"]], "size() (tltorch.factorizedtensor method)": [[10, "tltorch.FactorizedTensor.size"]], "to_tensor() (tltorch.factorizedtensor method)": [[10, "tltorch.FactorizedTensor.to_tensor"]], "tttensor (class in tltorch)": [[11, "tltorch.TTTensor"]], "decomposition (tltorch.tttensor property)": [[11, "tltorch.TTTensor.decomposition"]], "from_tensor() (tltorch.tttensor class method)": [[11, "tltorch.TTTensor.from_tensor"]], "new() (tltorch.tttensor class method)": [[11, "tltorch.TTTensor.new"]], "normal_() (tltorch.tttensor method)": [[11, "tltorch.TTTensor.normal_"]], "to_tensor() (tltorch.tttensor method)": [[11, "tltorch.TTTensor.to_tensor"]], "transduct() (tltorch.tttensor method)": [[11, "tltorch.TTTensor.transduct"]], "tensorizedtensor (class in tltorch)": [[12, "tltorch.TensorizedTensor"]], "from_matrix() (tltorch.tensorizedtensor class method)": [[12, "tltorch.TensorizedTensor.from_matrix"]], "from_tensor() (tltorch.tensorizedtensor class method)": [[12, "tltorch.TensorizedTensor.from_tensor"]], "new() (tltorch.tensorizedtensor class method)": [[12, "tltorch.TensorizedTensor.new"]], "to_matrix() (tltorch.tensorizedtensor method)": [[12, "tltorch.TensorizedTensor.to_matrix"]], "tuckertensor (class in tltorch)": [[13, "tltorch.TuckerTensor"]], "decomposition (tltorch.tuckertensor property)": [[13, "tltorch.TuckerTensor.decomposition"]], "from_tensor() (tltorch.tuckertensor class method)": [[13, "tltorch.TuckerTensor.from_tensor"]], "init_from_tensor() (tltorch.tuckertensor method)": [[13, "tltorch.TuckerTensor.init_from_tensor"]], "new() (tltorch.tuckertensor class method)": [[13, "tltorch.TuckerTensor.new"]], "normal_() (tltorch.tuckertensor method)": [[13, "tltorch.TuckerTensor.normal_"]], "to_tensor() (tltorch.tuckertensor method)": [[13, "tltorch.TuckerTensor.to_tensor"]], "factorizedconv (class in tltorch.factorized_layers)": [[14, "tltorch.factorized_layers.FactorizedConv"]], "extra_repr() (tltorch.factorized_layers.factorizedconv method)": [[14, "tltorch.factorized_layers.FactorizedConv.extra_repr"]], "forward() (tltorch.factorized_layers.factorizedconv method)": [[14, "tltorch.factorized_layers.FactorizedConv.forward"]], "from_conv() (tltorch.factorized_layers.factorizedconv class method)": [[14, "tltorch.factorized_layers.FactorizedConv.from_conv"]], "get_conv() (tltorch.factorized_layers.factorizedconv method)": [[14, "tltorch.factorized_layers.FactorizedConv.get_conv"]], "set() (tltorch.factorized_layers.factorizedconv method)": [[14, "tltorch.factorized_layers.FactorizedConv.set"]], "transduct() (tltorch.factorized_layers.factorizedconv method)": [[14, "tltorch.factorized_layers.FactorizedConv.transduct"]], "factorizedembedding (class in tltorch.factorized_layers)": [[15, "tltorch.factorized_layers.FactorizedEmbedding"]], "forward() (tltorch.factorized_layers.factorizedembedding method)": [[15, "tltorch.factorized_layers.FactorizedEmbedding.forward"]], "from_embedding() (tltorch.factorized_layers.factorizedembedding class method)": [[15, "tltorch.factorized_layers.FactorizedEmbedding.from_embedding"]], "from_embedding_list() (tltorch.factorized_layers.factorizedembedding class method)": [[15, "tltorch.factorized_layers.FactorizedEmbedding.from_embedding_list"]], "factorizedlinear (class in tltorch.factorized_layers)": [[16, "tltorch.factorized_layers.FactorizedLinear"]], "forward() (tltorch.factorized_layers.factorizedlinear method)": [[16, "tltorch.factorized_layers.FactorizedLinear.forward"]], "from_linear() (tltorch.factorized_layers.factorizedlinear class method)": [[16, "tltorch.factorized_layers.FactorizedLinear.from_linear"]], "from_linear_list() (tltorch.factorized_layers.factorizedlinear class method)": [[16, "tltorch.factorized_layers.FactorizedLinear.from_linear_list"]], "tcl (class in tltorch.factorized_layers)": [[17, "tltorch.factorized_layers.TCL"]], "forward() (tltorch.factorized_layers.tcl method)": [[17, "tltorch.factorized_layers.TCL.forward"]], "reset_parameters() (tltorch.factorized_layers.tcl method)": [[17, "tltorch.factorized_layers.TCL.reset_parameters"]], "trl (class in tltorch.factorized_layers)": [[18, "tltorch.factorized_layers.TRL"]], "forward() (tltorch.factorized_layers.trl method)": [[18, "tltorch.factorized_layers.TRL.forward"]], "init_from_linear() (tltorch.factorized_layers.trl method)": [[18, "tltorch.factorized_layers.TRL.init_from_linear"]], "init_from_random() (tltorch.factorized_layers.trl method)": [[18, "tltorch.factorized_layers.TRL.init_from_random"]], "tensordropout (class in tltorch.tensor_hooks)": [[23, "tltorch.tensor_hooks.TensorDropout"]], "remove_tensor_dropout() (in module tltorch.tensor_hooks)": [[24, "tltorch.tensor_hooks.remove_tensor_dropout"]], "remove_tensor_lasso() (in module tltorch.tensor_hooks)": [[25, "tltorch.tensor_hooks.remove_tensor_lasso"]], "tensor_dropout() (in module tltorch.tensor_hooks)": [[26, "tltorch.tensor_hooks.tensor_dropout"]], "tensor_lasso() (in module tltorch.tensor_hooks)": [[27, "tltorch.tensor_hooks.tensor_lasso"]]}})