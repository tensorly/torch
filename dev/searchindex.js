Search.setIndex({"docnames": ["about", "dev_guide/api", "dev_guide/contributing", "dev_guide/index", "index", "install", "modules/api", "modules/generated/tltorch.BlockTT", "modules/generated/tltorch.CPTensor", "modules/generated/tltorch.CPTensorized", "modules/generated/tltorch.ComplexBlockTT", "modules/generated/tltorch.ComplexCPTensor", "modules/generated/tltorch.ComplexCPTensorized", "modules/generated/tltorch.ComplexDenseTensor", "modules/generated/tltorch.ComplexDenseTensorized", "modules/generated/tltorch.ComplexTTTensor", "modules/generated/tltorch.ComplexTuckerTensor", "modules/generated/tltorch.ComplexTuckerTensorized", "modules/generated/tltorch.DenseTensor", "modules/generated/tltorch.DenseTensorized", "modules/generated/tltorch.FactorizedTensor", "modules/generated/tltorch.TTTensor", "modules/generated/tltorch.TensorizedTensor", "modules/generated/tltorch.TuckerTensor", "modules/generated/tltorch.factorized_layers.FactorizedConv", "modules/generated/tltorch.factorized_layers.FactorizedEmbedding", "modules/generated/tltorch.factorized_layers.FactorizedLinear", "modules/generated/tltorch.factorized_layers.TCL", "modules/generated/tltorch.factorized_layers.TRL", "modules/generated/tltorch.factorized_tensors.init.block_tt_init", "modules/generated/tltorch.factorized_tensors.init.cp_init", "modules/generated/tltorch.factorized_tensors.init.tensor_init", "modules/generated/tltorch.factorized_tensors.init.tt_init", "modules/generated/tltorch.factorized_tensors.init.tucker_init", "modules/generated/tltorch.tensor_hooks.TensorDropout", "modules/generated/tltorch.tensor_hooks.remove_tensor_dropout", "modules/generated/tltorch.tensor_hooks.remove_tensor_lasso", "modules/generated/tltorch.tensor_hooks.tensor_dropout", "modules/generated/tltorch.tensor_hooks.tensor_lasso", "modules/generated/tltorch.utils.get_tensorized_shape", "user_guide/factorized_conv", "user_guide/factorized_embeddings", "user_guide/index", "user_guide/tensor_hooks", "user_guide/tensorized_linear", "user_guide/trl"], "filenames": ["about.rst", "dev_guide/api.rst", "dev_guide/contributing.rst", "dev_guide/index.rst", "index.rst", "install.rst", "modules/api.rst", "modules/generated/tltorch.BlockTT.rst", "modules/generated/tltorch.CPTensor.rst", "modules/generated/tltorch.CPTensorized.rst", "modules/generated/tltorch.ComplexBlockTT.rst", "modules/generated/tltorch.ComplexCPTensor.rst", "modules/generated/tltorch.ComplexCPTensorized.rst", "modules/generated/tltorch.ComplexDenseTensor.rst", "modules/generated/tltorch.ComplexDenseTensorized.rst", "modules/generated/tltorch.ComplexTTTensor.rst", "modules/generated/tltorch.ComplexTuckerTensor.rst", "modules/generated/tltorch.ComplexTuckerTensorized.rst", "modules/generated/tltorch.DenseTensor.rst", "modules/generated/tltorch.DenseTensorized.rst", "modules/generated/tltorch.FactorizedTensor.rst", "modules/generated/tltorch.TTTensor.rst", "modules/generated/tltorch.TensorizedTensor.rst", "modules/generated/tltorch.TuckerTensor.rst", "modules/generated/tltorch.factorized_layers.FactorizedConv.rst", "modules/generated/tltorch.factorized_layers.FactorizedEmbedding.rst", "modules/generated/tltorch.factorized_layers.FactorizedLinear.rst", "modules/generated/tltorch.factorized_layers.TCL.rst", "modules/generated/tltorch.factorized_layers.TRL.rst", "modules/generated/tltorch.factorized_tensors.init.block_tt_init.rst", "modules/generated/tltorch.factorized_tensors.init.cp_init.rst", "modules/generated/tltorch.factorized_tensors.init.tensor_init.rst", "modules/generated/tltorch.factorized_tensors.init.tt_init.rst", "modules/generated/tltorch.factorized_tensors.init.tucker_init.rst", "modules/generated/tltorch.tensor_hooks.TensorDropout.rst", "modules/generated/tltorch.tensor_hooks.remove_tensor_dropout.rst", "modules/generated/tltorch.tensor_hooks.remove_tensor_lasso.rst", "modules/generated/tltorch.tensor_hooks.tensor_dropout.rst", "modules/generated/tltorch.tensor_hooks.tensor_lasso.rst", "modules/generated/tltorch.utils.get_tensorized_shape.rst", "user_guide/factorized_conv.rst", "user_guide/factorized_embeddings.rst", "user_guide/index.rst", "user_guide/tensor_hooks.rst", "user_guide/tensorized_linear.rst", "user_guide/trl.rst"], "titles": ["About Us", "Style and API", "Contributing", "Development guide", "Deep Tensorized Learning", "Installing tensorly-Torch", "API reference", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tltorch</span></code>.BlockTT", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tltorch</span></code>.CPTensor", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tltorch</span></code>.CPTensorized", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tltorch</span></code>.ComplexBlockTT", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tltorch</span></code>.ComplexCPTensor", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tltorch</span></code>.ComplexCPTensorized", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tltorch</span></code>.ComplexDenseTensor", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tltorch</span></code>.ComplexDenseTensorized", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tltorch</span></code>.ComplexTTTensor", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tltorch</span></code>.ComplexTuckerTensor", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tltorch</span></code>.ComplexTuckerTensorized", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tltorch</span></code>.DenseTensor", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tltorch</span></code>.DenseTensorized", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tltorch</span></code>.FactorizedTensor", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tltorch</span></code>.TTTensor", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tltorch</span></code>.TensorizedTensor", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tltorch</span></code>.TuckerTensor", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tltorch.factorized_layers</span></code>.FactorizedConv", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tltorch.factorized_layers</span></code>.FactorizedEmbedding", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tltorch.factorized_layers</span></code>.FactorizedLinear", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tltorch.factorized_layers</span></code>.TCL", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tltorch.factorized_layers</span></code>.TRL", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tltorch.factorized_tensors.init</span></code>.block_tt_init", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tltorch.factorized_tensors.init</span></code>.cp_init", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tltorch.factorized_tensors.init</span></code>.tensor_init", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tltorch.factorized_tensors.init</span></code>.tt_init", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tltorch.factorized_tensors.init</span></code>.tucker_init", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tltorch.tensor_hooks</span></code>.TensorDropout", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tltorch.tensor_hooks</span></code>.remove_tensor_dropout", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tltorch.tensor_hooks</span></code>.remove_tensor_lasso", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tltorch.tensor_hooks</span></code>.tensor_dropout", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tltorch.tensor_hooks</span></code>.tensor_lasso", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tltorch.utils</span></code>.get_tensorized_shape", "Factorized Convolutional Layers", "Factorized embedding layers", "User guide", "Tensor Hooks", "Tensorized Linear Layers", "Tensor Regression Layers"], "terms": {"tensorli": [0, 1, 2, 4, 6, 40, 41, 42, 43, 44], "torch": [0, 1, 2, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 31, 38, 40, 41, 42, 43, 44], "i": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 43, 44, 45], "an": [0, 2, 5, 6, 20, 22, 26, 38, 41, 42, 43, 45], "open": [0, 2], "sourc": [0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39], "effort": 0, "led": 0, "primarili": 0, "nvidia": 0, "research": 0, "jean": [0, 28], "kossaifi": [0, 27, 28], "It": [0, 4, 5, 40, 42, 45], "part": [0, 5, 6], "project": [0, 1, 2], "build": [0, 4, 6, 42], "top": [0, 4, 6, 42], "order": [0, 4, 20, 22, 24, 26, 39, 40, 44, 45], "provid": [0, 4, 6, 41, 42, 43], "out": [0, 4, 6, 41, 42], "box": [0, 4, 6, 41, 42], "pytorch": [0, 4, 6, 26, 40, 42], "tensor": [0, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "layer": [0, 4, 24, 25, 26, 27, 28, 38, 42, 43], "deep": [0, 6, 27, 42, 45], "learn": [0, 28], "anima": [0, 28], "anandkumar": [0, 27, 28], "wonmin": 0, "byeon": 0, "saurav": 0, "muralidharan": 0, "The": [0, 5, 6, 22, 23, 24, 26, 38, 44, 45], "In": [1, 4, 6, 40, 41, 43, 44, 45], "more": [1, 4], "gener": [1, 4, 5, 6, 38, 45], "we": [1, 2, 4, 6, 23, 29, 30, 32, 33, 39, 40, 41, 43, 44], "try": [1, 40], "maintain": 1, "simpl": [1, 4, 6, 43], "consist": 1, "here": [1, 5, 29, 30, 32, 33, 38, 41, 44], "ar": [1, 2, 4, 5, 6, 22, 23, 24, 28, 29, 30, 32, 33, 37, 38, 39, 40, 44], "some": [1, 40], "element": 1, "consid": 1, "come": [1, 4, 5], "soon": 1, "activ": [2, 45], "welcom": 2, "new": [2, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 35, 36, 37, 38, 43], "If": [2, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 38, 40], "you": [2, 4, 5, 6, 24, 38, 40, 41, 43, 44], "know": 2, "method": [2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 34, 42], "should": [2, 6, 24, 25, 26, 39], "spot": 2, "ani": [2, 4, 6, 40, 42, 43], "mistak": 2, "typo": 2, "miss": 2, "document": [2, 4], "etc": 2, "pleas": 2, "report": 2, "even": [2, 42], "better": [2, 45], "pull": 2, "request": 2, "To": [2, 20, 24, 43], "make": [2, 4, 5, 43], "sure": 2, "relev": 2, "alreadi": [2, 44], "work": 2, "can": [2, 4, 5, 6, 38, 40, 41, 42, 43, 44], "issu": [2, 6, 43, 45], "add": [2, 6, 8, 21, 24, 43], "code": [2, 42, 45], "fix": 2, "want": [2, 4, 5, 6], "github": 2, "repositori": 2, "For": [2, 4, 25, 28, 34, 40, 43], "each": [2, 39, 41, 43, 44], "function": [2, 6, 24, 25, 26, 43], "class": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 34, 40], "expect": 2, "help": 2, "docstr": 2, "numpi": [2, 4, 5, 45], "format": [2, 22, 29], "well": [2, 4, 5], "unit": 2, "test": [2, 4], "especi": 2, "futur": 2, "refactor": 2, "exis": 2, "broken": 2, "check": [2, 29, 30, 32, 33], "exist": [2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 41, 42], "exampl": [2, 8, 11, 13, 15, 16, 18, 20, 21, 23, 35, 36, 37, 38], "don": [2, 23, 38, 43], "t": [2, 23, 27, 38, 43], "hesit": 2, "contact": 2, "u": [2, 5], "unsur": 2, "have": [2, 4, 5, 6, 7, 9, 10, 12, 14, 17, 19, 20, 22, 23, 38, 40, 41, 43, 44], "question": 2, "contribut": 3, "how": [3, 7, 9, 10, 12, 14, 17, 19, 22, 23, 45], "guidelin": 3, "style": 3, "api": [3, 4], "batteri": 4, "includ": 4, "onli": [4, 7, 8, 18, 20, 21, 23, 28, 37], "librari": [4, 40], "all": [4, 5, 20, 24, 25, 26, 27, 37], "tri": 4, "easi": [4, 43], "possibl": [4, 40, 44], "us": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 39, 40, 42, 43, 44], "within": [4, 20, 24, 25, 26, 42], "leverag": [4, 45], "structur": [4, 45], "data": [4, 6, 40, 44], "easili": [4, 6, 40, 43, 44], "through": [4, 6, 23, 38, 40, 45], "trl": [4, 42, 43], "tcl": 4, "factor": [4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 42, 43, 44], "convolut": [4, 24, 42, 45], "built": 4, "do": [4, 44, 45], "import": [4, 40, 41, 43, 44, 45], "directli": [4, 6, 24, 26, 28, 29, 30, 31, 32, 33, 40], "model": [4, 25, 45], "initi": [4, 23, 24, 25, 28, 29, 30, 31, 32, 33, 42], "decomposit": [4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 32, 33, 34, 35, 36, 37, 40, 42, 44], "tricki": 4, "take": [4, 24, 25, 26, 43], "care": [4, 24, 25, 26, 43], "whether": [4, 25, 26], "randomli": [4, 24, 27, 28, 43], "our": [4, 6, 40, 43], "modul": [4, 6, 24, 25, 26, 28, 35, 36, 37, 40, 43], "from": [4, 6, 7, 8, 18, 20, 21, 22, 23, 24, 25, 26, 28, 35, 36, 38, 41, 42, 44, 45], "pretrain": 4, "hook": [4, 24, 25, 26, 34, 42], "augment": 4, "architectur": 4, "robustifi": 4, "dropout": [4, 34, 35, 36, 37, 42], "automat": [4, 6, 25, 26, 38, 41, 44], "select": [4, 37, 43], "rank": [4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 35, 36, 37, 38, 40, 41, 42, 44, 45], "end": 4, "l1": [4, 38, 43], "regular": [4, 24, 25, 26, 38, 42, 44], "avail": 4, "alwai": 4, "ad": [4, 23], "compar": 4, "between": [4, 38, 45], "perform": [4, 24, 25, 26, 27, 28, 44], "variou": 4, "base": [4, 6], "matrix": [4, 6, 7, 9, 10, 12, 14, 17, 19, 21, 22, 26, 29, 39], "algebra": [4, 42], "oper": [4, 6], "higher": [4, 39, 44, 45], "typic": [4, 45], "map": [4, 45], "fact": 4, "abil": 4, "preserv": [4, 45], "local": 4, "along": 4, "larg": [4, 43, 45], "dataset": 4, "effici": [4, 6, 25, 42, 45], "hardwar": 4, "made": 4, "current": [4, 7, 8, 18, 20, 21, 23], "level": [4, 27, 28], "allow": [4, 6, 28, 45], "further": 4, "individu": 4, "whole": 4, "python": [4, 5], "aim": 4, "access": [4, 38], "high": [4, 45], "core": [4, 6, 23, 33], "regress": [4, 28, 42], "ha": [4, 23, 29, 30, 31, 32, 33, 37, 43, 45], "flexibl": 4, "backend": 4, "run": [4, 24, 25, 26], "seamlessli": 4, "tensorflow": 4, "jax": 4, "mxnet": 4, "cupi": 4, "conveni": [4, 6], "heavi": 4, "lift": 4, "benefit": 4, "wrap": 4, "nice": 4, "instanc": [4, 24, 25, 26, 34, 38, 40, 43], "2d": 4, "3d": 4, "parametr": [4, 6, 22, 24, 26, 35, 36, 37, 43, 44], "cp": [4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 30, 35, 36, 37, 38, 40, 43], "result": [4, 5, 45], "separ": 4, "replac": [4, 6, 25, 28], "origin": [4, 26], "seri": 4, "small": [4, 43, 44], "ones": [4, 8, 21, 24], "These": [4, 6], "also": [4, 6, 27, 38, 41, 43, 44, 45], "tucker": [4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 28, 33, 40, 43, 44], "train": [4, 21, 26, 29, 43, 45], "implement": [4, 24, 26, 40, 44], "other": [4, 23], "contract": [4, 26, 27, 44], "linear": [4, 26, 28, 41, 42, 45], "start": [4, 5], "need": [5, 24, 25, 26, 38], "3": [5, 8, 11, 13, 15, 16, 18, 20, 21, 23, 25, 26, 34, 35, 36, 37, 38, 40, 41], "scipi": 5, "pain": 5, "free": 5, "experi": 5, "anaconda": 5, "distribiut": 5, "ship": 5, "readi": 5, "simpli": [5, 6, 43], "your": [5, 24, 38, 40], "termin": 5, "option": [5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "updat": [5, 38], "packag": 5, "cd": 5, "git": 5, "http": 5, "com": 5, "Then": 5, "edit": 5, "mode": [5, 8, 21, 23, 24, 26, 28, 34, 37], "e": [5, 8, 21, 23, 24, 26, 40, 44, 45], "equival": [5, 20, 24], "uni": 5, "vital": 5, "thi": [5, 6, 23, 24, 25, 26, 28, 39, 43, 44, 45], "pytest": 5, "tltorch": [5, 6, 40, 41, 43, 44, 45], "slimit": 5, "minifi": 5, "rcssmin": 5, "now": [5, 40, 44, 45], "doc": 5, "html": 5, "_build": 5, "neural": [6, 45], "network": [6, 20, 28, 40, 42, 45], "concept": [6, 45], "which": [6, 23, 26, 34, 35, 36, 37, 40, 44], "instead": [6, 23, 24, 25, 26, 28], "dens": [6, 8, 11, 13, 15, 16, 18, 20, 21, 23], "creat": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 38, 41, 42, 43, 44, 45], "main": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "form": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 29, 30, 32, 33], "factorizedtensor": [6, 8, 11, 13, 15, 16, 18, 21, 23, 31, 34, 35, 36, 37, 38], "shape": [6, 7, 8, 9, 11, 13, 15, 16, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 34, 41, 44], "where": [6, 8, 21, 24], "tt": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 29, 32], "note": [6, 20, 29, 30, 32, 33, 39, 44], "just": [6, 41, 44], "unfactor": 6, "manipul": [6, 43], "unifi": 6, "interfac": 6, "altern": [6, 44], "specif": 6, "subclass": [6, 24, 25, 26], "repres": 6, "low": [6, 26, 40, 45], "tensorizedtensor": [6, 7, 9, 10, 12, 14, 17, 19, 25], "tensorized_shap": [6, 7, 9, 10, 12, 14, 17, 19, 22, 26], "blocktt": [6, 10, 25, 29, 41], "explicitli": 6, "type": [6, 25], "follow": [6, 7, 8, 18, 20, 21, 23, 40, 44], "theori": 6, "specifi": [6, 25, 28, 29, 30, 31, 32, 33, 40, 43, 44], "dtype": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 27, 28, 40, 44, 45], "cfloat": 6, "creation": [6, 40], "abov": [6, 45], "valu": [6, 23, 26, 27, 38, 39, 43], "howev": [6, 44], "practic": 6, "mani": [6, 7, 9, 10, 12, 14, 17, 19, 22], "support": [6, 7, 8, 18, 20, 21, 23, 26], "distribut": [6, 7, 8, 18, 20, 21, 23], "parallel": 6, "particular": 6, "propos": 6, "transpar": 6, "wai": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 43], "around": 6, "complextensor": 6, "store": 6, "real": 6, "imaginari": 6, "return": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 37, 38, 39], "reconstruct": [6, 7, 8, 18, 20, 21, 22, 23, 24, 26, 29, 30, 31, 32, 33, 43, 44], "instanci": 6, "complexcp": 6, "complexfactor": 6, "n": 6, "dimension": 6, "A": [6, 27, 45], "drop": [6, 25, 37], "": [6, 24, 38, 40, 43, 44, 45], "never": 6, "full": [6, 7, 8, 9, 18, 19, 20, 21, 22, 23, 26, 28, 29, 30, 31, 32, 33, 43, 44], "tabl": [6, 25], "remov": [6, 35, 36, 38, 43], "below": 6, "unless": 6, "arg": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "kwarg": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28], "attribut": [7, 8, 18, 20, 21, 22, 23, 27], "paramet": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 45], "compos": [7, 8, 18, 20, 21, 23], "init_from_tensor": [7, 8, 18, 21, 23], "classmethod": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26], "devic": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 27, 28, 40, 45], "none": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 39], "tupl": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 39, 40], "int": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 34, 37, 39], "same": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 38, 39, 40, 43, 45], "float": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 29, 30, 31, 32, 33, 34, 37, 38], "n_matric": [7, 9, 10, 12, 14, 17, 19, 22], "default": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 40], "indic": [7, 9, 10, 12, 14, 17, 19, 20, 22, 24, 25, 26], "matric": [7, 9, 10, 12, 14, 17, 19, 22, 26, 44], "jointli": [7, 9, 10, 12, 14, 17, 19, 22], "decompos": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 41], "rais": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "valueerror": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "given": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 29, 30, 32, 33], "doe": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "properti": [7, 8, 18, 20, 21, 23], "to_tensor": [7, 8, 18, 20, 21, 23], "its": [7, 8, 18, 20, 21, 23], "normal_": [7, 8, 18, 20, 21, 23, 35, 36, 37, 38, 43], "mean": [7, 8, 18, 20, 21, 23, 29, 30, 31, 32, 33, 43, 44], "0": [7, 8, 11, 13, 15, 16, 18, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 43, 44], "std": [7, 8, 18, 20, 21, 23, 29, 30, 31, 32, 33], "1": [7, 8, 18, 20, 21, 23, 24, 25, 26, 27, 28, 34, 37, 38], "inial": [7, 8, 18, 20, 21, 23], "gaussian": [7, 8, 18, 20, 21, 23], "standard": [7, 8, 18, 20, 21, 23, 29, 30, 31, 32, 33, 43], "deviat": [7, 8, 18, 20, 21, 23, 29, 30, 31, 32, 33, 43], "self": [7, 8, 18, 20, 21, 23, 24], "from_tensor": [7, 8, 9, 18, 19, 20, 21, 22, 23], "tensorfactor": [7, 8, 9, 11, 13, 15, 16, 18, 19, 20, 21, 22, 23], "weight": [8, 25, 26, 28, 29, 30, 32, 33, 38, 43, 44], "4": [8, 11, 13, 15, 16, 18, 20, 21, 23, 34, 35, 36, 37, 38, 41, 44, 45], "2": [8, 11, 13, 15, 16, 18, 20, 21, 22, 23, 25, 26, 35, 36, 37, 38, 39, 40, 44, 45], "half": [8, 11, 13, 15, 16, 18, 20, 21, 23, 44], "would": [8, 11, 13, 15, 16, 18, 20, 21, 23, 40], "tucker_tensor": [8, 11, 13, 15, 16, 18, 20, 21, 23, 33], "5": [8, 11, 13, 15, 16, 18, 20, 21, 23, 35, 36, 37, 38, 40, 43, 44, 45], "transduct": [8, 21, 24], "new_dim": [8, 21], "new_factor": [8, 21], "dimens": [8, 21, 22, 23, 24, 25, 26, 27, 34, 37, 39, 41, 45], "insert": [8, 21, 24], "after": [8, 21, 24, 38, 43], "channel": [8, 21, 24], "befor": [8, 21, 24, 45], "g": [8, 21, 23, 24, 26, 40, 44, 45], "time": [8, 21, 24, 45], "height": [8, 21, 24], "width": [8, 21, 24], "complex": [10, 11, 12, 13, 14, 15, 16, 17], "complex64": [10, 11, 12, 13, 14, 15, 16, 17], "fixed_rank_mod": [11, 15, 16, 23, 24], "densetensor": 14, "tuckertensor": [17, 33], "must": [20, 26], "name": [20, 34, 40], "ndim": [20, 22], "tensor_shap": [20, 22], "numel": 20, "forward": [20, 24, 25, 26, 27, 28, 44], "index": 20, "dure": [20, 26, 43, 44], "pass": [20, 24, 25, 26, 27, 28, 40, 44, 45], "dim": [20, 22, 23, 26], "fact_tensor": [20, 43], "size": [20, 24, 26, 27, 28, 34, 39, 40, 44, 45], "product": [21, 45], "state": 21, "correspond": [22, 23], "underli": 22, "init_from_matrix": 22, "from_matrix": 22, "tensorized_row_shap": 22, "tensorized_column_shap": 22, "first": [22, 23, 25, 38, 40, 43, 45], "row": 22, "second": [22, 25], "column": 22, "tensorizedmatrix": 22, "to_matrix": 22, "sever": [22, 38, 45], "batch": [22, 27, 28, 44], "unsqueezed_mod": [23, 28], "unsqueezed_init": 23, "averag": [23, 28], "list": [23, 27, 28], "essenti": 23, "unsqueez": 23, "unsqueezed_factor": 23, "in_channel": 24, "out_channel": 24, "kernel_s": [24, 40], "stride": 24, "pad": 24, "dilat": 24, "bia": [24, 26, 27, 28], "fals": [24, 26, 27, 28, 34, 37, 44], "has_bia": 24, "n_layer": [24, 25, 26, 28], "arbitrari": 24, "from_conv_list": 24, "from_factor": 24, "reset_paramet": [24, 25, 26, 27], "x": [24, 26, 27, 28, 43, 45], "defin": [24, 25, 26, 43], "comput": [24, 25, 26, 27], "everi": [24, 25, 26], "call": [24, 25, 26], "overridden": [24, 25, 26], "although": [24, 25, 26], "recip": [24, 25, 26], "one": [24, 25, 26, 38], "afterward": [24, 25, 26], "sinc": [24, 25, 26], "former": [24, 25, 26], "regist": [24, 25, 26], "while": [24, 25, 26, 43, 45], "latter": [24, 25, 26], "silent": [24, 25, 26], "ignor": [24, 25, 26], "them": [24, 25, 26, 44], "set": [24, 27, 38], "conv": [24, 40], "get_conv": 24, "sub": 24, "joint": 24, "share": 24, "from_conv": [24, 40], "conv_lay": 24, "decompose_weight": [24, 25, 40], "true": [24, 25, 26, 28, 38, 39, 40, 41, 44], "decomposition_kwarg": [24, 25, 26], "nn": [24, 25, 26, 28, 40, 44, 45], "convnd": 24, "str": [24, 25, 26, 38], "decomposed_weight": 24, "bool": [24, 25, 26, 28, 38], "kernel": [24, 40], "otherwis": [24, 28, 38], "dict": [24, 25], "decompoosit": 24, "weightss": 24, "fine_tune_transduction_onli": 24, "addit": 24, "extra_repr": 24, "extra": 24, "represent": 24, "print": 24, "custom": 24, "inform": [24, 45], "re": [24, 43], "own": 24, "both": [24, 25, 39], "singl": [24, 26], "line": 24, "multi": [24, 45], "string": 24, "accept": [24, 39], "num_embed": [25, 41], "embedding_dim": [25, 41], "auto_tensor": [25, 26, 44], "n_tensorized_mod": [25, 26, 41, 44], "tensorized_num_embed": 25, "tensorized_embedding_dim": 25, "8": [25, 26], "embed": [25, 42], "compress": [25, 40, 44], "number": [25, 26, 37, 39, 40, 44, 45], "entri": 25, "lookup": 25, "per": 25, "reshap": [25, 44], "get_embed": 25, "input": [25, 26, 27, 28, 39, 40, 41, 44, 45], "from_embed": [25, 41], "embedding_lay": [25, 41], "from_embedding_list": 25, "embedding_layer_list": 25, "in_tensorized_featur": [26, 44], "out_tensorized_featur": [26, 44], "checkpoint": 26, "fulli": [26, 28], "connect": [26, 28], "That": 26, "express": 26, "infer": 26, "unfold": 26, "back": 26, "input_featur": 26, "in_featur": [26, 39, 44], "could": 26, "verifi": 26, "prod": 26, "version": 26, "enabl": [26, 42], "gradient": [26, 43], "save": 26, "memori": 26, "get_linear": 26, "from_linear": [26, 44], "verbos": [26, 27, 28, 39], "find": [26, 44], "factorized_weight": 26, "np": [26, 45], "percentag": 26, "from_linear_list": 26, "linear_list": 26, "init": 26, "random": [26, 42], "input_shap": [27, 28, 40, 45], "input_s": 27, "iter": [27, 28, 43], "exclud": [27, 28], "output": [27, 28, 41, 45], "refer": [27, 28], "j": 27, "khanna": [27, 28], "z": 27, "lipton": [27, 28], "furlanello": [27, 28], "parsimoni": [27, 45], "net": 27, "2017": 27, "ieee": 27, "confer": 27, "vision": 27, "pattern": 27, "recognit": 27, "workshop": 27, "cvprw": 27, "honolulu": 27, "hi": 27, "pp": 27, "1940": 27, "1946": 27, "doi": 27, "10": [27, 43, 44], "1109": 27, "243": 27, "output_shap": [28, 45], "zachari": 28, "c": 28, "arinbjorn": 28, "kolbeinsson": 28, "aran": 28, "tommaso": 28, "jmlr": 28, "2020": 28, "init_from_random": 28, "decompose_full_weight": 28, "construct": 28, "init_from_linear": 28, "initialis": 28, "pool": 28, "block_tt": 29, "02": [29, 30, 31, 32, 33, 43], "so": [29, 30, 31, 32, 33, 40, 43, 44], "desir": [29, 30, 31, 32, 33], "assum": [29, 30, 32, 33], "correct": [29, 30, 32, 33], "block": [29, 42], "done": [29, 30, 32, 33], "cp_tensor": 30, "cptensor": 30, "tt_tensor": 32, "tttensor": 32, "proba": 34, "min_dim": [34, 37, 39], "min_valu": [34, 37], "drop_test": [34, 37], "appli": [34, 35, 36, 37, 38, 40, 43], "probabl": [34, 37], "minimum": [34, 37], "32": [34, 40], "last": 34, "two": 34, "factorized_tensor": [35, 36, 37], "tensormodul": [35, 36], "tensor_dropout": 35, "p": [35, 36, 37, 43], "lasso": [36, 38, 42], "tensor_lasso": 36, "compon": [37, 43], "latent": 37, "space": 37, "larger": 37, "than": [37, 38], "been": 37, "attach": 37, "remove_tensor_dropout": 37, "penalti": [38, 43], "01": [38, 43], "clamp_weight": 38, "threshold": 38, "1e": 38, "06": 38, "normalize_loss": 38, "scale": 38, "loss": [38, 43], "clamp": 38, "6": [38, 45], "lower": 38, "raw": 38, "sum": 38, "absolut": 38, "let": [38, 40, 43, 44, 45], "sai": 38, "tensor2": 38, "7": 38, "tensorlasso": 38, "l1_loss": 38, "optim": 38, "backpropag": 38, "usual": 38, "finish": 38, "forget": [38, 43], "reset": [38, 43], "keep": [38, 43], "accumul": [38, 43], "remove_tensor_lasso": 38, "out_featur": 39, "thei": 39, "integ": 39, "least": 39, "smallest": 39, "in_tensor": 39, "out_tensor": 39, "bruteforc": 39, "solut": 39, "enough": 39, "encount": 39, "dnn": 39, "reduc": 40, "choos": [40, 43], "cpu": [40, 45], "input_channel": 40, "16": [40, 44], "output_channel": 40, "batch_siz": [40, 45], "24": 40, "kernel_shap": 40, "randn": [40, 44, 45], "float32": [40, 44, 45], "conv2d": 40, "exactli": 40, "except": 40, "either": [40, 41], "factorizedconv": 40, "conv3d": 40, "fact_conv": 40, "Or": [40, 41], "case": [40, 41, 44], "len": 40, "get": 40, "mobilenet": 40, "v2": 40, "similarli": [40, 43], "resnet": 40, "bottleneck": 40, "scratch": [41, 44, 45], "determin": [41, 44], "factorizedembed": 41, "auto_reshap": 41, "d": 41, "wa": [42, 43], "written": 42, "readili": 42, "anyon": 42, "without": [42, 43], "knowledg": 42, "veri": [43, 44, 45], "helper": 43, "tucker_dropout": 43, "remove_tucker_dropout": 43, "hard": 43, "problem": 43, "One": 43, "previous": 43, "extend": 43, "introduc": 43, "object": 43, "everyth": 43, "l1_reg": 43, "tuckerl1regular": 43, "my_loss": 43, "anoth": 43, "arbitrarili": 43, "potenti": 43, "lead": [43, 45], "vanish": 43, "explod": 43, "properli": 43, "zero": 43, "point": 44, "imagin": 44, "approxim": 44, "fact_linear": 44, "factorizedlinear": 44, "instruct": 44, "length": 44, "final": 44, "direct": 44, "faster": 44, "particularli": 44, "still": 45, "obtain": 45, "flatten": 45, "being": 45, "approach": 45, "drawback": 45, "discard": 45, "topolog": 45, "spatial": 45, "lack": 45, "robust": 45, "allevi": 45, "term": 45, "constraint": 45, "act": 45, "implicit": 45, "regur": 45, "sampl": 45, "see": 45}, "objects": {"": [[6, 0, 0, "-", "tltorch"]], "tltorch": [[7, 1, 1, "", "BlockTT"], [8, 1, 1, "", "CPTensor"], [9, 1, 1, "", "CPTensorized"], [10, 1, 1, "", "ComplexBlockTT"], [11, 1, 1, "", "ComplexCPTensor"], [12, 1, 1, "", "ComplexCPTensorized"], [13, 1, 1, "", "ComplexDenseTensor"], [14, 1, 1, "", "ComplexDenseTensorized"], [15, 1, 1, "", "ComplexTTTensor"], [16, 1, 1, "", "ComplexTuckerTensor"], [17, 1, 1, "", "ComplexTuckerTensorized"], [18, 1, 1, "", "DenseTensor"], [19, 1, 1, "", "DenseTensorized"], [20, 1, 1, "", "FactorizedTensor"], [21, 1, 1, "", "TTTensor"], [22, 1, 1, "", "TensorizedTensor"], [23, 1, 1, "", "TuckerTensor"], [6, 0, 0, "-", "factorized_layers"], [6, 0, 0, "-", "factorized_tensors"], [6, 0, 0, "-", "tensor_hooks"]], "tltorch.BlockTT": [[7, 2, 1, "", "decomposition"], [7, 3, 1, "", "from_tensor"], [7, 3, 1, "", "new"], [7, 3, 1, "", "normal_"], [7, 3, 1, "", "to_tensor"]], "tltorch.CPTensor": [[8, 2, 1, "", "decomposition"], [8, 3, 1, "", "from_tensor"], [8, 3, 1, "", "new"], [8, 3, 1, "", "normal_"], [8, 3, 1, "", "to_tensor"], [8, 3, 1, "", "transduct"]], "tltorch.CPTensorized": [[9, 3, 1, "", "from_tensor"], [9, 3, 1, "", "new"]], "tltorch.ComplexBlockTT": [[10, 3, 1, "", "new"]], "tltorch.ComplexCPTensor": [[11, 3, 1, "", "new"]], "tltorch.ComplexCPTensorized": [[12, 3, 1, "", "new"]], "tltorch.ComplexDenseTensor": [[13, 3, 1, "", "new"]], "tltorch.ComplexDenseTensorized": [[14, 3, 1, "", "new"]], "tltorch.ComplexTTTensor": [[15, 3, 1, "", "new"]], "tltorch.ComplexTuckerTensor": [[16, 3, 1, "", "new"]], "tltorch.ComplexTuckerTensorized": [[17, 3, 1, "", "new"]], "tltorch.DenseTensor": [[18, 2, 1, "", "decomposition"], [18, 3, 1, "", "from_tensor"], [18, 3, 1, "", "new"], [18, 3, 1, "", "normal_"], [18, 3, 1, "", "to_tensor"]], "tltorch.DenseTensorized": [[19, 3, 1, "", "from_tensor"], [19, 3, 1, "", "new"]], "tltorch.FactorizedTensor": [[20, 2, 1, "", "decomposition"], [20, 3, 1, "", "dim"], [20, 3, 1, "", "forward"], [20, 3, 1, "", "from_tensor"], [20, 2, 1, "", "name"], [20, 2, 1, "", "ndim"], [20, 3, 1, "", "new"], [20, 3, 1, "", "normal_"], [20, 3, 1, "", "size"], [20, 3, 1, "", "to_tensor"]], "tltorch.TTTensor": [[21, 2, 1, "", "decomposition"], [21, 3, 1, "", "from_tensor"], [21, 3, 1, "", "new"], [21, 3, 1, "", "normal_"], [21, 3, 1, "", "to_tensor"], [21, 3, 1, "", "transduct"]], "tltorch.TensorizedTensor": [[22, 3, 1, "", "from_matrix"], [22, 3, 1, "", "from_tensor"], [22, 3, 1, "", "new"], [22, 3, 1, "", "to_matrix"]], "tltorch.TuckerTensor": [[23, 2, 1, "", "decomposition"], [23, 3, 1, "", "from_tensor"], [23, 3, 1, "", "init_from_tensor"], [23, 3, 1, "", "new"], [23, 3, 1, "", "normal_"], [23, 3, 1, "", "to_tensor"]], "tltorch.factorized_layers": [[24, 1, 1, "", "FactorizedConv"], [25, 1, 1, "", "FactorizedEmbedding"], [26, 1, 1, "", "FactorizedLinear"], [27, 1, 1, "", "TCL"], [28, 1, 1, "", "TRL"]], "tltorch.factorized_layers.FactorizedConv": [[24, 3, 1, "", "extra_repr"], [24, 3, 1, "", "forward"], [24, 3, 1, "", "from_conv"], [24, 3, 1, "", "get_conv"], [24, 3, 1, "", "set"], [24, 3, 1, "", "transduct"]], "tltorch.factorized_layers.FactorizedEmbedding": [[25, 3, 1, "", "forward"], [25, 3, 1, "", "from_embedding"], [25, 3, 1, "", "from_embedding_list"]], "tltorch.factorized_layers.FactorizedLinear": [[26, 3, 1, "", "forward"], [26, 3, 1, "", "from_linear"], [26, 3, 1, "", "from_linear_list"]], "tltorch.factorized_layers.TCL": [[27, 3, 1, "", "forward"], [27, 3, 1, "", "reset_parameters"]], "tltorch.factorized_layers.TRL": [[28, 3, 1, "", "forward"], [28, 3, 1, "", "init_from_linear"], [28, 3, 1, "", "init_from_random"]], "tltorch.factorized_tensors.init": [[29, 4, 1, "", "block_tt_init"], [30, 4, 1, "", "cp_init"], [31, 4, 1, "", "tensor_init"], [32, 4, 1, "", "tt_init"], [33, 4, 1, "", "tucker_init"]], "tltorch.tensor_hooks": [[34, 1, 1, "", "TensorDropout"], [35, 4, 1, "", "remove_tensor_dropout"], [36, 4, 1, "", "remove_tensor_lasso"], [37, 4, 1, "", "tensor_dropout"], [38, 4, 1, "", "tensor_lasso"]], "tltorch.utils": [[39, 4, 1, "", "get_tensorized_shape"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:property", "3": "py:method", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "property", "Python property"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"]}, "titleterms": {"about": 0, "u": 0, "core": 0, "team": 0, "support": 0, "style": 1, "api": [1, 6], "contribut": 2, "how": 2, "guidelin": 2, "develop": 3, "guid": [3, 42], "deep": 4, "tensor": [4, 6, 43, 44, 45], "learn": 4, "improv": 4, "your": 4, "neural": 4, "network": 4, "method": 4, "instal": 5, "tensorli": [5, 45], "torch": [5, 45], "pre": 5, "requisit": 5, "pip": 5, "recommend": 5, "clone": 5, "github": 5, "repositori": 5, "run": 5, "test": 5, "build": 5, "document": 5, "refer": 6, "factor": [6, 40, 41], "matric": 6, "complex": 6, "initi": [6, 43], "regress": [6, 45], "layer": [6, 40, 41, 44, 45], "contract": 6, "linear": [6, 44], "convolut": [6, 40], "embed": [6, 41], "dropout": [6, 43], "l1": 6, "regular": [6, 43], "util": [6, 39], "tltorch": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39], "blocktt": 7, "cptensor": [8, 9], "complexblocktt": 10, "complexcptensor": [11, 12], "complexdensetensor": [13, 14], "complextttensor": 15, "complextuckertensor": [16, 17], "densetensor": [18, 19], "factorizedtensor": 20, "tttensor": 21, "tensorizedtensor": 22, "tuckertensor": 23, "factorized_lay": [24, 25, 26, 27, 28], "factorizedconv": 24, "factorizedembed": 25, "factorizedlinear": 26, "tcl": 27, "trl": [28, 45], "factorized_tensor": [29, 30, 31, 32, 33], "init": [29, 30, 31, 32, 33], "block_tt_init": 29, "cp_init": 30, "tensor_init": 31, "tt_init": 32, "tucker_init": 33, "tensor_hook": [34, 35, 36, 37, 38], "tensordropout": 34, "remove_tensor_dropout": 35, "remove_tensor_lasso": 36, "tensor_dropout": 37, "tensor_lasso": 38, "get_tensorized_shap": 39, "creat": 40, "from": 40, "random": [40, 45], "an": 40, "exist": 40, "effici": 40, "block": 40, "user": 42, "hook": 43, "lasso": 43, "rank": 43, "decomposit": 43}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"About Us": [[0, "about-us"]], "Core team": [[0, "core-team"]], "Supporters": [[0, "supporters"]], "Style and API": [[1, "style-and-api"]], "Contributing": [[2, "contributing"]], "How-to": [[2, "how-to"]], "Guidelines": [[2, "guidelines"]], "Development guide": [[3, "development-guide"]], "Deep Tensorized Learning": [[4, "deep-tensorized-learning"]], "Improve your neural networks with tensor methods": [[4, "improve-your-neural-networks-with-tensor-methods"]], "Installing tensorly-Torch": [[5, "installing-tensorly-torch"]], "Pre-requisite": [[5, "pre-requisite"]], "Installing with pip (recommended)": [[5, "installing-with-pip-recommended"]], "Cloning the github repository": [[5, "cloning-the-github-repository"]], "Running the tests": [[5, "running-the-tests"]], "Building the documentation": [[5, "building-the-documentation"]], "API reference": [[6, "api-reference"]], "Factorized Tensors": [[6, "factorized-tensors"]], "Tensorized Matrices": [[6, "tensorized-matrices"]], "Complex Tensors": [[6, "complex-tensors"]], "Initialization": [[6, "module-tltorch.factorized_tensors"]], "Tensor Regression Layers": [[6, "module-tltorch.factorized_layers"], [45, "tensor-regression-layers"]], "Tensor Contraction Layers": [[6, "tensor-contraction-layers"]], "Factorized Linear Layers": [[6, "factorized-linear-layers"]], "Factorized Convolutions": [[6, "factorized-convolutions"]], "Factorized Embeddings": [[6, "factorized-embeddings"]], "Tensor Dropout": [[6, "module-tltorch.tensor_hooks"]], "L1 Regularization": [[6, "l1-regularization"]], "Utilities": [[6, "utilities"]], "tltorch.BlockTT": [[7, "tltorch-blocktt"]], "tltorch.CPTensor": [[8, "tltorch-cptensor"]], "tltorch.CPTensorized": [[9, "tltorch-cptensorized"]], "tltorch.ComplexBlockTT": [[10, "tltorch-complexblocktt"]], "tltorch.ComplexCPTensor": [[11, "tltorch-complexcptensor"]], "tltorch.ComplexCPTensorized": [[12, "tltorch-complexcptensorized"]], "tltorch.ComplexDenseTensor": [[13, "tltorch-complexdensetensor"]], "tltorch.ComplexDenseTensorized": [[14, "tltorch-complexdensetensorized"]], "tltorch.ComplexTTTensor": [[15, "tltorch-complextttensor"]], "tltorch.ComplexTuckerTensor": [[16, "tltorch-complextuckertensor"]], "tltorch.ComplexTuckerTensorized": [[17, "tltorch-complextuckertensorized"]], "tltorch.DenseTensor": [[18, "tltorch-densetensor"]], "tltorch.DenseTensorized": [[19, "tltorch-densetensorized"]], "tltorch.FactorizedTensor": [[20, "tltorch-factorizedtensor"]], "tltorch.TTTensor": [[21, "tltorch-tttensor"]], "tltorch.TensorizedTensor": [[22, "tltorch-tensorizedtensor"]], "tltorch.TuckerTensor": [[23, "tltorch-tuckertensor"]], "tltorch.factorized_layers.FactorizedConv": [[24, "tltorch-factorized-layers-factorizedconv"]], "tltorch.factorized_layers.FactorizedEmbedding": [[25, "tltorch-factorized-layers-factorizedembedding"]], "tltorch.factorized_layers.FactorizedLinear": [[26, "tltorch-factorized-layers-factorizedlinear"]], "tltorch.factorized_layers.TCL": [[27, "tltorch-factorized-layers-tcl"]], "tltorch.factorized_layers.TRL": [[28, "tltorch-factorized-layers-trl"]], "tltorch.factorized_tensors.init.block_tt_init": [[29, "tltorch-factorized-tensors-init-block-tt-init"]], "tltorch.factorized_tensors.init.cp_init": [[30, "tltorch-factorized-tensors-init-cp-init"]], "tltorch.factorized_tensors.init.tensor_init": [[31, "tltorch-factorized-tensors-init-tensor-init"]], "tltorch.factorized_tensors.init.tt_init": [[32, "tltorch-factorized-tensors-init-tt-init"]], "tltorch.factorized_tensors.init.tucker_init": [[33, "tltorch-factorized-tensors-init-tucker-init"]], "tltorch.tensor_hooks.TensorDropout": [[34, "tltorch-tensor-hooks-tensordropout"]], "tltorch.tensor_hooks.remove_tensor_dropout": [[35, "tltorch-tensor-hooks-remove-tensor-dropout"]], "tltorch.tensor_hooks.remove_tensor_lasso": [[36, "tltorch-tensor-hooks-remove-tensor-lasso"]], "tltorch.tensor_hooks.tensor_dropout": [[37, "tltorch-tensor-hooks-tensor-dropout"]], "tltorch.tensor_hooks.tensor_lasso": [[38, "tltorch-tensor-hooks-tensor-lasso"]], "tltorch.utils.get_tensorized_shape": [[39, "tltorch-utils-get-tensorized-shape"]], "Factorized Convolutional Layers": [[40, "factorized-convolutional-layers"]], "Creating Factorized Convolutions": [[40, "creating-factorized-convolutions"]], "From Random": [[40, "from-random"]], "From an existing Convolution": [[40, "from-an-existing-convolution"]], "Efficient Convolutional Blocks": [[40, "efficient-convolutional-blocks"]], "Factorized embedding layers": [[41, "factorized-embedding-layers"]], "User guide": [[42, "user-guide"]], "Tensor Hooks": [[43, "tensor-hooks"]], "Tensor dropout": [[43, "tensor-dropout"]], "Lasso rank regularization": [[43, "lasso-rank-regularization"]], "Initializing tensor decomposition": [[43, "initializing-tensor-decomposition"]], "Tensorized Linear Layers": [[44, "tensorized-linear-layers"]], "TRL in TensorLy-Torch": [[45, "trl-in-tensorly-torch"]], "Random TRL": [[45, "random-trl"]]}, "indexentries": {"module": [[6, "module-tltorch"], [6, "module-tltorch.factorized_layers"], [6, "module-tltorch.factorized_tensors"], [6, "module-tltorch.tensor_hooks"]], "tltorch": [[6, "module-tltorch"]], "tltorch.factorized_layers": [[6, "module-tltorch.factorized_layers"]], "tltorch.factorized_tensors": [[6, "module-tltorch.factorized_tensors"]], "tltorch.tensor_hooks": [[6, "module-tltorch.tensor_hooks"]], "blocktt (class in tltorch)": [[7, "tltorch.BlockTT"]], "decomposition (tltorch.blocktt property)": [[7, "tltorch.BlockTT.decomposition"]], "from_tensor() (tltorch.blocktt class method)": [[7, "tltorch.BlockTT.from_tensor"]], "new() (tltorch.blocktt class method)": [[7, "tltorch.BlockTT.new"]], "normal_() (tltorch.blocktt method)": [[7, "tltorch.BlockTT.normal_"]], "to_tensor() (tltorch.blocktt method)": [[7, "tltorch.BlockTT.to_tensor"]], "cptensor (class in tltorch)": [[8, "tltorch.CPTensor"]], "decomposition (tltorch.cptensor property)": [[8, "tltorch.CPTensor.decomposition"]], "from_tensor() (tltorch.cptensor class method)": [[8, "tltorch.CPTensor.from_tensor"]], "new() (tltorch.cptensor class method)": [[8, "tltorch.CPTensor.new"]], "normal_() (tltorch.cptensor method)": [[8, "tltorch.CPTensor.normal_"]], "to_tensor() (tltorch.cptensor method)": [[8, "tltorch.CPTensor.to_tensor"]], "transduct() (tltorch.cptensor method)": [[8, "tltorch.CPTensor.transduct"]], "cptensorized (class in tltorch)": [[9, "tltorch.CPTensorized"]], "from_tensor() (tltorch.cptensorized class method)": [[9, "tltorch.CPTensorized.from_tensor"]], "new() (tltorch.cptensorized class method)": [[9, "tltorch.CPTensorized.new"]], "complexblocktt (class in tltorch)": [[10, "tltorch.ComplexBlockTT"]], "new() (tltorch.complexblocktt class method)": [[10, "tltorch.ComplexBlockTT.new"]], "complexcptensor (class in tltorch)": [[11, "tltorch.ComplexCPTensor"]], "new() (tltorch.complexcptensor class method)": [[11, "tltorch.ComplexCPTensor.new"]], "complexcptensorized (class in tltorch)": [[12, "tltorch.ComplexCPTensorized"]], "new() (tltorch.complexcptensorized class method)": [[12, "tltorch.ComplexCPTensorized.new"]], "complexdensetensor (class in tltorch)": [[13, "tltorch.ComplexDenseTensor"]], "new() (tltorch.complexdensetensor class method)": [[13, "tltorch.ComplexDenseTensor.new"]], "complexdensetensorized (class in tltorch)": [[14, "tltorch.ComplexDenseTensorized"]], "new() (tltorch.complexdensetensorized class method)": [[14, "tltorch.ComplexDenseTensorized.new"]], "complextttensor (class in tltorch)": [[15, "tltorch.ComplexTTTensor"]], "new() (tltorch.complextttensor class method)": [[15, "tltorch.ComplexTTTensor.new"]], "complextuckertensor (class in tltorch)": [[16, "tltorch.ComplexTuckerTensor"]], "new() (tltorch.complextuckertensor class method)": [[16, "tltorch.ComplexTuckerTensor.new"]], "complextuckertensorized (class in tltorch)": [[17, "tltorch.ComplexTuckerTensorized"]], "new() (tltorch.complextuckertensorized class method)": [[17, "tltorch.ComplexTuckerTensorized.new"]], "densetensor (class in tltorch)": [[18, "tltorch.DenseTensor"]], "decomposition (tltorch.densetensor property)": [[18, "tltorch.DenseTensor.decomposition"]], "from_tensor() (tltorch.densetensor class method)": [[18, "tltorch.DenseTensor.from_tensor"]], "new() (tltorch.densetensor class method)": [[18, "tltorch.DenseTensor.new"]], "normal_() (tltorch.densetensor method)": [[18, "tltorch.DenseTensor.normal_"]], "to_tensor() (tltorch.densetensor method)": [[18, "tltorch.DenseTensor.to_tensor"]], "densetensorized (class in tltorch)": [[19, "tltorch.DenseTensorized"]], "from_tensor() (tltorch.densetensorized class method)": [[19, "tltorch.DenseTensorized.from_tensor"]], "new() (tltorch.densetensorized class method)": [[19, "tltorch.DenseTensorized.new"]], "factorizedtensor (class in tltorch)": [[20, "tltorch.FactorizedTensor"]], "decomposition (tltorch.factorizedtensor property)": [[20, "tltorch.FactorizedTensor.decomposition"]], "dim() (tltorch.factorizedtensor method)": [[20, "tltorch.FactorizedTensor.dim"]], "forward() (tltorch.factorizedtensor method)": [[20, "tltorch.FactorizedTensor.forward"]], "from_tensor() (tltorch.factorizedtensor class method)": [[20, "tltorch.FactorizedTensor.from_tensor"]], "name (tltorch.factorizedtensor property)": [[20, "tltorch.FactorizedTensor.name"]], "ndim (tltorch.factorizedtensor property)": [[20, "tltorch.FactorizedTensor.ndim"]], "new() (tltorch.factorizedtensor class method)": [[20, "tltorch.FactorizedTensor.new"]], "normal_() (tltorch.factorizedtensor method)": [[20, "tltorch.FactorizedTensor.normal_"]], "size() (tltorch.factorizedtensor method)": [[20, "tltorch.FactorizedTensor.size"]], "to_tensor() (tltorch.factorizedtensor method)": [[20, "tltorch.FactorizedTensor.to_tensor"]], "tttensor (class in tltorch)": [[21, "tltorch.TTTensor"]], "decomposition (tltorch.tttensor property)": [[21, "tltorch.TTTensor.decomposition"]], "from_tensor() (tltorch.tttensor class method)": [[21, "tltorch.TTTensor.from_tensor"]], "new() (tltorch.tttensor class method)": [[21, "tltorch.TTTensor.new"]], "normal_() (tltorch.tttensor method)": [[21, "tltorch.TTTensor.normal_"]], "to_tensor() (tltorch.tttensor method)": [[21, "tltorch.TTTensor.to_tensor"]], "transduct() (tltorch.tttensor method)": [[21, "tltorch.TTTensor.transduct"]], "tensorizedtensor (class in tltorch)": [[22, "tltorch.TensorizedTensor"]], "from_matrix() (tltorch.tensorizedtensor class method)": [[22, "tltorch.TensorizedTensor.from_matrix"]], "from_tensor() (tltorch.tensorizedtensor class method)": [[22, "tltorch.TensorizedTensor.from_tensor"]], "new() (tltorch.tensorizedtensor class method)": [[22, "tltorch.TensorizedTensor.new"]], "to_matrix() (tltorch.tensorizedtensor method)": [[22, "tltorch.TensorizedTensor.to_matrix"]], "tuckertensor (class in tltorch)": [[23, "tltorch.TuckerTensor"]], "decomposition (tltorch.tuckertensor property)": [[23, "tltorch.TuckerTensor.decomposition"]], "from_tensor() (tltorch.tuckertensor class method)": [[23, "tltorch.TuckerTensor.from_tensor"]], "init_from_tensor() (tltorch.tuckertensor method)": [[23, "tltorch.TuckerTensor.init_from_tensor"]], "new() (tltorch.tuckertensor class method)": [[23, "tltorch.TuckerTensor.new"]], "normal_() (tltorch.tuckertensor method)": [[23, "tltorch.TuckerTensor.normal_"]], "to_tensor() (tltorch.tuckertensor method)": [[23, "tltorch.TuckerTensor.to_tensor"]], "factorizedconv (class in tltorch.factorized_layers)": [[24, "tltorch.factorized_layers.FactorizedConv"]], "extra_repr() (tltorch.factorized_layers.factorizedconv method)": [[24, "tltorch.factorized_layers.FactorizedConv.extra_repr"]], "forward() (tltorch.factorized_layers.factorizedconv method)": [[24, "tltorch.factorized_layers.FactorizedConv.forward"]], "from_conv() (tltorch.factorized_layers.factorizedconv class method)": [[24, "tltorch.factorized_layers.FactorizedConv.from_conv"]], "get_conv() (tltorch.factorized_layers.factorizedconv method)": [[24, "tltorch.factorized_layers.FactorizedConv.get_conv"]], "set() (tltorch.factorized_layers.factorizedconv method)": [[24, "tltorch.factorized_layers.FactorizedConv.set"]], "transduct() (tltorch.factorized_layers.factorizedconv method)": [[24, "tltorch.factorized_layers.FactorizedConv.transduct"]], "factorizedembedding (class in tltorch.factorized_layers)": [[25, "tltorch.factorized_layers.FactorizedEmbedding"]], "forward() (tltorch.factorized_layers.factorizedembedding method)": [[25, "tltorch.factorized_layers.FactorizedEmbedding.forward"]], "from_embedding() (tltorch.factorized_layers.factorizedembedding class method)": [[25, "tltorch.factorized_layers.FactorizedEmbedding.from_embedding"]], "from_embedding_list() (tltorch.factorized_layers.factorizedembedding class method)": [[25, "tltorch.factorized_layers.FactorizedEmbedding.from_embedding_list"]], "factorizedlinear (class in tltorch.factorized_layers)": [[26, "tltorch.factorized_layers.FactorizedLinear"]], "forward() (tltorch.factorized_layers.factorizedlinear method)": [[26, "tltorch.factorized_layers.FactorizedLinear.forward"]], "from_linear() (tltorch.factorized_layers.factorizedlinear class method)": [[26, "tltorch.factorized_layers.FactorizedLinear.from_linear"]], "from_linear_list() (tltorch.factorized_layers.factorizedlinear class method)": [[26, "tltorch.factorized_layers.FactorizedLinear.from_linear_list"]], "tcl (class in tltorch.factorized_layers)": [[27, "tltorch.factorized_layers.TCL"]], "forward() (tltorch.factorized_layers.tcl method)": [[27, "tltorch.factorized_layers.TCL.forward"]], "reset_parameters() (tltorch.factorized_layers.tcl method)": [[27, "tltorch.factorized_layers.TCL.reset_parameters"]], "trl (class in tltorch.factorized_layers)": [[28, "tltorch.factorized_layers.TRL"]], "forward() (tltorch.factorized_layers.trl method)": [[28, "tltorch.factorized_layers.TRL.forward"]], "init_from_linear() (tltorch.factorized_layers.trl method)": [[28, "tltorch.factorized_layers.TRL.init_from_linear"]], "init_from_random() (tltorch.factorized_layers.trl method)": [[28, "tltorch.factorized_layers.TRL.init_from_random"]], "block_tt_init() (in module tltorch.factorized_tensors.init)": [[29, "tltorch.factorized_tensors.init.block_tt_init"]], "cp_init() (in module tltorch.factorized_tensors.init)": [[30, "tltorch.factorized_tensors.init.cp_init"]], "tensor_init() (in module tltorch.factorized_tensors.init)": [[31, "tltorch.factorized_tensors.init.tensor_init"]], "tt_init() (in module tltorch.factorized_tensors.init)": [[32, "tltorch.factorized_tensors.init.tt_init"]], "tucker_init() (in module tltorch.factorized_tensors.init)": [[33, "tltorch.factorized_tensors.init.tucker_init"]], "tensordropout (class in tltorch.tensor_hooks)": [[34, "tltorch.tensor_hooks.TensorDropout"]], "remove_tensor_dropout() (in module tltorch.tensor_hooks)": [[35, "tltorch.tensor_hooks.remove_tensor_dropout"]], "remove_tensor_lasso() (in module tltorch.tensor_hooks)": [[36, "tltorch.tensor_hooks.remove_tensor_lasso"]], "tensor_dropout() (in module tltorch.tensor_hooks)": [[37, "tltorch.tensor_hooks.tensor_dropout"]], "tensor_lasso() (in module tltorch.tensor_hooks)": [[38, "tltorch.tensor_hooks.tensor_lasso"]], "get_tensorized_shape() (in module tltorch.utils)": [[39, "tltorch.utils.get_tensorized_shape"]]}})